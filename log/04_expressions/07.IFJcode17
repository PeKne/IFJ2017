# 2017-12-04 16:26:32.450792
# SECTION: 04_expressions
# TEST: 07
# INFO: multiple operations with different priorities II
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 4 with following arguments:
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@&pomInteger
# Executing instruction: IMOVE at line: 6 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@&pomInteger()
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@&pomString
# Executing instruction: IMOVE at line: 8 with following arguments:
# Arg1: Const@=(string)
# Dest: GF@&pomString()
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@&pomFloat
# Executing instruction: IMOVE at line: 10 with following arguments:
# Arg1: Const@=0(double)
# Dest: GF@&pomFloat()
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: GF@&pomBool
# Executing instruction: IMOVE at line: 12 with following arguments:
# Arg1: Const@=false(bool)
# Dest: GF@&pomBool()
# Executing instruction: IDEFVAR at line: 13 with following arguments:
# Dest: GF@&pomCntr
# Executing instruction: IMOVE at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@&pomCntr()
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: TF@a
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=0(int)
# Dest: TF@a()
# Executing instruction: IMOVE at line: 19 with following arguments:
# Arg1: Const@=2(int)
# Dest: GF@&pomInteger=0(int)
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: GF@&pomInteger=2(int)
# Dest: TF@a=0(int)
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: TF@b
# Executing instruction: IMOVE at line: 22 with following arguments:
# Arg1: Const@=0(int)
# Dest: TF@b()
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=16(int)
# Dest: GF@&pomInteger=2(int)
# Executing instruction: IMOVE at line: 24 with following arguments:
# Arg1: GF@&pomInteger=16(int)
# Dest: TF@b=0(int)
# Executing instruction: IMOVE at line: 25 with following arguments:
# Arg1: TF@b=16(int)
# Dest: GF@&pomInteger=16(int)
# Executing instruction: IDIV at line: 26 with following arguments:
# Arg1: TF@b=16(int)
# Arg2: TF@a=2(int)
# Dest: GF@&pomInteger=16(int)
# Error at line: 26
# Wrong operand type!
# 
# EXPECTED INTERPRETER STDOUT:

#  94


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 53
# PRICE: ---
# GROOT: ---
# 
#   1: ' multiple operations with different priorities II
#   2: scope
#   3:     dim a as integer = 2
#   4:     dim b as integer = 16
#   5:     a = b / a + a - b + 100
#   6:     print a;
#   7: end scope

########################################

.IFJcode17                                                                      #     1/31
JUMP $$scope                                                                    #     2/31
LABEL $$scope                                                                   #     4/31
DEFVAR GF@&pomInteger                                                           #     5/31
MOVE GF@&pomInteger int@0                                                       #     6/31
DEFVAR GF@&pomString                                                            #     7/31
MOVE GF@&pomString string@                                                      #     8/31
DEFVAR GF@&pomFloat                                                             #     9/31
MOVE GF@&pomFloat float@0                                                       #    10/31
DEFVAR GF@&pomBool                                                              #    11/31
MOVE GF@&pomBool bool@false                                                     #    12/31
DEFVAR GF@&pomCntr                                                              #    13/31
MOVE GF@&pomCntr int@0                                                          #    14/31
CREATEFRAME                                                                     #    15/31
DEFVAR TF@a                                                                     #    17/31
MOVE TF@a int@0                                                                 #    18/31
MOVE GF@&pomInteger int@2                                                       #    19/31
MOVE TF@a GF@&pomInteger                                                        #    20/31
DEFVAR TF@b                                                                     #    21/31
MOVE TF@b int@0                                                                 #    22/31
MOVE GF@&pomInteger int@16                                                      #    23/31
MOVE TF@b GF@&pomInteger                                                        #    24/31
MOVE GF@&pomInteger TF@b                                                        #    25/31
DIV GF@&pomInteger TF@b TF@a                                                    #    26/31
ADD GF@&pomInteger GF@&pomInteger TF@a                                          #    27/31
SUB GF@&pomInteger GF@&pomInteger TF@b                                          #    28/31
ADD GF@&pomInteger GF@&pomInteger int@100                                       #    29/31
MOVE TF@a GF@&pomInteger                                                        #    30/31
WRITE TF@a                                                                      #    31/31

