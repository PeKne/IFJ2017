# 2017-12-05 00:24:15.088162
# SECTION: 04_expressions
# TEST: 09
# INFO: string concat
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 4 with following arguments:
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@&pomInteger
# Executing instruction: IMOVE at line: 6 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@&pomInteger()
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@&pomString
# Executing instruction: IMOVE at line: 8 with following arguments:
# Arg1: Const@=(string)
# Dest: GF@&pomString()
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@&pomFloat
# Executing instruction: IMOVE at line: 10 with following arguments:
# Arg1: Const@=0(double)
# Dest: GF@&pomFloat()
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: GF@&pomBool
# Executing instruction: IMOVE at line: 12 with following arguments:
# Arg1: Const@=false(bool)
# Dest: GF@&pomBool()
# Executing instruction: IDEFVAR at line: 13 with following arguments:
# Dest: GF@&pomCntr
# Executing instruction: IMOVE at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@&pomCntr()
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: TF@a
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=(string)
# Dest: TF@a()
# Executing instruction: IMOVE at line: 19 with following arguments:
# Arg1: Const@=master (string)
# Dest: GF@&pomString=(string)
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: GF@&pomString=master (string)
# Dest: TF@a=(string)
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: TF@b
# Executing instruction: IMOVE at line: 22 with following arguments:
# Arg1: Const@=(string)
# Dest: TF@b()
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@= puppets!(string)
# Dest: GF@&pomString=master (string)
# Executing instruction: IMOVE at line: 24 with following arguments:
# Arg1: GF@&pomString= puppets!(string)
# Dest: TF@b=(string)
# Executing instruction: IWRITE at line: 25 with following arguments:
# Arg1: TF@a=master (string)
# Executing instruction: IWRITE at line: 26 with following arguments:
# Arg1: Const@=of(string)
# Executing instruction: IWRITE at line: 27 with following arguments:
# Arg1: TF@b= puppets!(string)
# Executing instruction: IGROOT at line: 29 with following arguments:
# I am Groot at 29 (132).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 132 (34+98)
# GROOT: 132
# 
#   1: ' string concat
#   2: scope
#   3:     dim a as string = !"master "
#   4:     dim b as string = !" puppets!"
#   5: 
#   6:     print a; !"of"; b;
#   7: end scope

########################################

.IFJcode17                                                                      #     1/27
JUMP $$scope                                                                    #     2/27
LABEL $$scope                                                                   #     4/27
DEFVAR GF@&pomInteger                                                           #     5/27
MOVE GF@&pomInteger int@0                                                       #     6/27
DEFVAR GF@&pomString                                                            #     7/27
MOVE GF@&pomString string@                                                      #     8/27
DEFVAR GF@&pomFloat                                                             #     9/27
MOVE GF@&pomFloat float@0                                                       #    10/27
DEFVAR GF@&pomBool                                                              #    11/27
MOVE GF@&pomBool bool@false                                                     #    12/27
DEFVAR GF@&pomCntr                                                              #    13/27
MOVE GF@&pomCntr int@0                                                          #    14/27
CREATEFRAME                                                                     #    15/27
DEFVAR TF@a                                                                     #    17/27
MOVE TF@a string@                                                               #    18/27
MOVE GF@&pomString string@master\032                                            #    19/27
MOVE TF@a GF@&pomString                                                         #    20/27
DEFVAR TF@b                                                                     #    21/27
MOVE TF@b string@                                                               #    22/27
MOVE GF@&pomString string@\032puppets!                                          #    23/27
MOVE TF@b GF@&pomString                                                         #    24/27
WRITE TF@a                                                                      #    25/27
WRITE string@of                                                                 #    26/27
WRITE TF@b                                                                      #    27/27

