# 2017-12-04 12:08:01.126875
# SECTION: 04_expressions
# TEST: 08
# INFO: divide integer and doubles
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# In if and loop statement can only be relational operators.
# ERROR - 3 - sÃ©mantickÃ¡ chyba v programu â nedefinovanÃ¡ funkce/promeÌnnÃ¡, pokus o redefinici funkce/promeÌnnÃ©, atd.
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:

#  4
#  4


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 3
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: ' divide integer and doubles
#   2: scope
#   3:     dim a as integer = 9
#   4:     dim b as integer = 2
#   5:     dim c as double = 8
#   6:     dim d as double = 2
#   7: 
#   8:     print c / d; !"\n"; a \ b;
#   9: end scope

########################################

.IFJcode17                                                                      #     1/36
JUMP $$scope                                                                    #     2/36
LABEL $$scope                                                                   #     4/36
DEFVAR GF@&pomInteger                                                           #     5/36
MOVE GF@&pomInteger int@0                                                       #     6/36
DEFVAR GF@&pomString                                                            #     7/36
MOVE GF@&pomString string@                                                      #     8/36
DEFVAR GF@&pomFloat                                                             #     9/36
MOVE GF@&pomFloat float@0                                                       #    10/36
DEFVAR GF@&pomBool                                                              #    11/36
MOVE GF@&pomBool bool@false                                                     #    12/36
DEFVAR GF@&pomCntr                                                              #    13/36
MOVE GF@&pomCntr int@0                                                          #    14/36
CREATEFRAME                                                                     #    15/36
DEFVAR TF@a                                                                     #    17/36
MOVE TF@a int@0                                                                 #    18/36
MOVE GF@&pomInteger int@9                                                       #    19/36
MOVE TF@a GF@&pomInteger                                                        #    20/36
DEFVAR TF@b                                                                     #    21/36
MOVE TF@b int@0                                                                 #    22/36
MOVE GF@&pomInteger int@2                                                       #    23/36
MOVE TF@b GF@&pomInteger                                                        #    24/36
DEFVAR TF@c                                                                     #    25/36
MOVE TF@c float@0                                                               #    26/36
MOVE GF@&pomFloat float@8.0                                                     #    27/36
MOVE TF@c GF@&pomFloat                                                          #    28/36
DEFVAR TF@d                                                                     #    29/36
MOVE TF@d float@0                                                               #    30/36
MOVE GF@&pomFloat float@2.0                                                     #    31/36
MOVE TF@d GF@&pomFloat                                                          #    32/36
WRITE TF@c                                                                      #    33/36
WRITE TF@d                                                                      #    34/36
redukce                                                                         #    35/36
ERROR on line 8                                                                 #    36/36

