# 2017-12-05 13:44:50.461768
# SECTION: 04_expressions
# TEST: 08
# INFO: divide integer and doubles
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# In if and loop statement can only be relational operators.
# ERROR -  6 - ostatnÃ­ sÃ©mantickÃ© chyby.
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:

#  4
#  4


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 6
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: ' divide integer and doubles
#   2: scope
#   3:     dim a as integer = 9
#   4:     dim b as integer = 2
#   5:     dim c as double = 8
#   6:     dim d as double = 2
#   7: 
#   8:     print c / d; !"\n"; a \ b;
#   9: end scope

########################################

.IFJcode17                                                                      #     1/35
JUMP $$scope                                                                    #     2/35
LABEL $$scope                                                                   #     4/35
DEFVAR GF@&pomInteger                                                           #     5/35
MOVE GF@&pomInteger int@0                                                       #     6/35
DEFVAR GF@&pomString                                                            #     7/35
MOVE GF@&pomString string@                                                      #     8/35
DEFVAR GF@&pomFloat                                                             #     9/35
MOVE GF@&pomFloat float@0                                                       #    10/35
DEFVAR GF@&pomBool                                                              #    11/35
MOVE GF@&pomBool bool@false                                                     #    12/35
DEFVAR GF@&pomCntr                                                              #    13/35
MOVE GF@&pomCntr int@0                                                          #    14/35
CREATEFRAME                                                                     #    15/35
DEFVAR TF@a                                                                     #    17/35
MOVE TF@a int@0                                                                 #    18/35
MOVE GF@&pomInteger int@9                                                       #    19/35
MOVE TF@a GF@&pomInteger                                                        #    20/35
DEFVAR TF@b                                                                     #    21/35
MOVE TF@b int@0                                                                 #    22/35
MOVE GF@&pomInteger int@2                                                       #    23/35
MOVE TF@b GF@&pomInteger                                                        #    24/35
DEFVAR TF@c                                                                     #    25/35
MOVE TF@c float@0                                                               #    26/35
MOVE GF@&pomFloat float@8.0                                                     #    27/35
MOVE TF@c GF@&pomFloat                                                          #    28/35
DEFVAR TF@d                                                                     #    29/35
MOVE TF@d float@0                                                               #    30/35
MOVE GF@&pomFloat float@2.0                                                     #    31/35
MOVE TF@d GF@&pomFloat                                                          #    32/35
WRITE TF@c                                                                      #    33/35
WRITE TF@d                                                                      #    34/35
ERROR on line 8                                                                 #    35/35

