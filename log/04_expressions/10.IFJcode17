# 2017-12-04 15:33:12.427597
# SECTION: 04_expressions
# TEST: 10
# INFO: Convert integer into double
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# Wrong types of operands!
# ERROR -  4 - sÃ©mantickÃ¡ chyba typovÃ© kompatibility v aritmetickÃ½ch, rÌeteÌzcovÃ½ch a relacÌnÃ­ch vÃ½razech, prÌÃ­p. Å¡patnÃ½ pocÌet cÌi typ parametruÌ u volÃ¡nÃ­ funkce.
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:

#  1.5


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 4
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: ' Convert integer into double
#   2: function foo(a as integer, b as integer) as integer
#   3: 
#   4: end function
#   5: 
#   6: scope
#   7: 
#   8: 	dim a as integer
#   9: 	a = 3
#  10: 	dim b as double
#  11: 	b = a / 2
#  12: 	print b;
#  13: 
#  14: end scope

########################################

.IFJcode17                                                                      #     1/34
JUMP $$scope                                                                    #     2/34
rule_par                                                                        #     4/34
rule next par                                                                   #     5/34
rule_par                                                                        #     6/34
rule next par                                                                   #     7/34
LABEL $foo                                                                      #     8/34
PUSHFRAME                                                                       #     9/34
DEFVAR LF@&retval                                                               #    10/34
MOVE LF@&retval GF@&pomInteger                                                  #    11/34
POPFRAME                                                                        #    12/34
RETURN                                                                          #    13/34
LABEL $$scope                                                                   #    15/34
DEFVAR GF@&pomInteger                                                           #    16/34
MOVE GF@&pomInteger int@0                                                       #    17/34
DEFVAR GF@&pomString                                                            #    18/34
MOVE GF@&pomString string@                                                      #    19/34
DEFVAR GF@&pomFloat                                                             #    20/34
MOVE GF@&pomFloat float@0                                                       #    21/34
DEFVAR GF@&pomBool                                                              #    22/34
MOVE GF@&pomBool bool@false                                                     #    23/34
DEFVAR GF@&pomCntr                                                              #    24/34
MOVE GF@&pomCntr int@0                                                          #    25/34
CREATEFRAME                                                                     #    26/34
DEFVAR TF@a                                                                     #    28/34
MOVE TF@a int@0                                                                 #    29/34
MOVE GF@&pomInteger int@3                                                       #    30/34
MOVE TF@a GF@&pomInteger                                                        #    31/34
DEFVAR TF@b                                                                     #    32/34
MOVE TF@b float@0                                                               #    33/34
ERROR on line 11                                                                #    34/34

