# 2017-12-05 13:44:50.486816
# SECTION: 04_expressions
# TEST: 18
# INFO: comments inside expressions
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# 4.1-8: syntax error, unexpected ID, expecting END
# 
# EXPECTED INTERPRETER STDOUT:

#  96


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 51
# PRICE: ---
# GROOT: ---
# 
#   1: ' comments inside expressions
#   2: 
#   3: function foo() as integer
#   4: 	return 39
#   5: end function
#   6: 
#   7: scope
#   8: 	
#   9: 	dim a as integer
#  10: 	a = foo()
#  11: 	a = a + 3 + 6' comment
#  12: 	a = a /' '/ * /' '/ 2 ' + 8
#  13: 	print a;
#  14: 
#  15: end scope

########################################

.IFJcode17                                                                      #     1/36
JUMP $$scope                                                                    #     2/36
rule_par                                                                        #     4/36
LABEL $foo                                                                      #     5/36
PUSHFRAME                                                                       #     6/36
DEFVAR LF@&retval                                                               #     7/36
MOVE LF@&retval GF@&pomInteger                                                  #     8/36
POPFRAME                                                                        #     9/36
RETURN                                                                          #    10/36
LABEL $$scope                                                                   #    12/36
DEFVAR GF@&pomInteger                                                           #    13/36
MOVE GF@&pomInteger int@0                                                       #    14/36
DEFVAR GF@&pomString                                                            #    15/36
MOVE GF@&pomString string@                                                      #    16/36
DEFVAR GF@&pomFloat                                                             #    17/36
MOVE GF@&pomFloat float@0                                                       #    18/36
DEFVAR GF@&pomBool                                                              #    19/36
MOVE GF@&pomBool bool@false                                                     #    20/36
DEFVAR GF@&pomCntr                                                              #    21/36
MOVE GF@&pomCntr int@0                                                          #    22/36
CREATEFRAME                                                                     #    23/36
DEFVAR TF@a                                                                     #    25/36
MOVE TF@a int@0                                                                 #    26/36
CALL $foo                                                                       #    27/36
MOVE TF@a TF@&retval                                                            #    28/36
MOVE GF@&pomInteger TF@a                                                        #    29/36
ADD GF@&pomInteger TF@a int@3                                                   #    30/36
ADD GF@&pomInteger GF@&pomInteger int@6                                         #    31/36
MOVE TF@a GF@&pomInteger                                                        #    32/36
MOVE GF@&pomInteger TF@a                                                        #    33/36
MUL GF@&pomInteger TF@a int@2                                                   #    34/36
MOVE TF@a GF@&pomInteger                                                        #    35/36
WRITE TF@a                                                                      #    36/36

