# 2017-12-04 15:33:12.566277
# SECTION: 04_expressions
# TEST: 36
# INFO: Big number of float integers +-
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 4 with following arguments:
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@&pomInteger
# Executing instruction: IMOVE at line: 6 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@&pomInteger()
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@&pomString
# Executing instruction: IMOVE at line: 8 with following arguments:
# Arg1: Const@=(string)
# Dest: GF@&pomString()
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@&pomFloat
# Executing instruction: IMOVE at line: 10 with following arguments:
# Arg1: Const@=0(double)
# Dest: GF@&pomFloat()
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: GF@&pomBool
# Executing instruction: IMOVE at line: 12 with following arguments:
# Arg1: Const@=false(bool)
# Dest: GF@&pomBool()
# Executing instruction: IDEFVAR at line: 13 with following arguments:
# Dest: GF@&pomCntr
# Executing instruction: IMOVE at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@&pomCntr()
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: TF@a
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=0(double)
# Dest: TF@a()
# Executing instruction: IMOVE at line: 19 with following arguments:
# Arg1: Const@=0.15392032971323(double)
# Dest: GF@&pomFloat=0(double)
# Executing instruction: IADD at line: 20 with following arguments:
# Arg1: Const@=0.15392032971323(double)
# Arg2: Const@=0.45034736183022(double)
# Dest: GF@&pomFloat=0.15392032971323(double)
# Executing instruction: ISUB at line: 21 with following arguments:
# Arg1: GF@&pomFloat=0.6042676915434499(double)
# Arg2: Const@=0.22857732755531(double)
# Dest: GF@&pomFloat=0.6042676915434499(double)
# Executing instruction: ISUB at line: 22 with following arguments:
# Arg1: GF@&pomFloat=0.3756903639881399(double)
# Arg2: Const@=0.10393178095293(double)
# Dest: GF@&pomFloat=0.3756903639881399(double)
# Executing instruction: IADD at line: 23 with following arguments:
# Arg1: GF@&pomFloat=0.2717585830352099(double)
# Arg2: Const@=0.5770683007208(double)
# Dest: GF@&pomFloat=0.2717585830352099(double)
# Executing instruction: ISUB at line: 24 with following arguments:
# Arg1: GF@&pomFloat=0.8488268837560099(double)
# Arg2: Const@=0.20937356036593(double)
# Dest: GF@&pomFloat=0.8488268837560099(double)
# Executing instruction: IADD at line: 25 with following arguments:
# Arg1: GF@&pomFloat=0.6394533233900799(double)
# Arg2: Const@=0.88500488311285(double)
# Dest: GF@&pomFloat=0.6394533233900799(double)
# Executing instruction: ISUB at line: 26 with following arguments:
# Arg1: GF@&pomFloat=1.52445820650293(double)
# Arg2: Const@=0.17863870280731(double)
# Dest: GF@&pomFloat=1.52445820650293(double)
# Executing instruction: ISUB at line: 27 with following arguments:
# Arg1: GF@&pomFloat=1.34581950369562(double)
# Arg2: Const@=0.43715851168947(double)
# Dest: GF@&pomFloat=1.34581950369562(double)
# Executing instruction: ISUB at line: 28 with following arguments:
# Arg1: GF@&pomFloat=0.9086609920061499(double)
# Arg2: Const@=0.63981254568315(double)
# Dest: GF@&pomFloat=0.9086609920061499(double)
# Executing instruction: IADD at line: 29 with following arguments:
# Arg1: GF@&pomFloat=0.2688484463229999(double)
# Arg2: Const@=0.8022290676842601(double)
# Dest: GF@&pomFloat=0.2688484463229999(double)
# Executing instruction: IADD at line: 30 with following arguments:
# Arg1: GF@&pomFloat=1.07107751400726(double)
# Arg2: Const@=0.90395464929936(double)
# Dest: GF@&pomFloat=1.07107751400726(double)
# Executing instruction: ISUB at line: 31 with following arguments:
# Arg1: GF@&pomFloat=1.97503216330662(double)
# Arg2: Const@=0.22485914231504(double)
# Dest: GF@&pomFloat=1.97503216330662(double)
# Executing instruction: IADD at line: 32 with following arguments:
# Arg1: GF@&pomFloat=1.75017302099158(double)
# Arg2: Const@=0.80677499659675(double)
# Dest: GF@&pomFloat=1.75017302099158(double)
# Executing instruction: IADD at line: 33 with following arguments:
# Arg1: GF@&pomFloat=2.55694801758833(double)
# Arg2: Const@=0.33955973030047(double)
# Dest: GF@&pomFloat=2.55694801758833(double)
# Executing instruction: ISUB at line: 34 with following arguments:
# Arg1: GF@&pomFloat=2.896507747888799(double)
# Arg2: Const@=0.55546566357625(double)
# Dest: GF@&pomFloat=2.896507747888799(double)
# Executing instruction: IADD at line: 35 with following arguments:
# Arg1: GF@&pomFloat=2.34104208431255(double)
# Arg2: Const@=0.48636960121168(double)
# Dest: GF@&pomFloat=2.34104208431255(double)
# Executing instruction: IADD at line: 36 with following arguments:
# Arg1: GF@&pomFloat=2.82741168552423(double)
# Arg2: Const@=0.24275394354144(double)
# Dest: GF@&pomFloat=2.82741168552423(double)
# Executing instruction: IADD at line: 37 with following arguments:
# Arg1: GF@&pomFloat=3.07016562906567(double)
# Arg2: Const@=0.71708868617056(double)
# Dest: GF@&pomFloat=3.07016562906567(double)
# Executing instruction: IADD at line: 38 with following arguments:
# Arg1: GF@&pomFloat=3.787254315236229(double)
# Arg2: Const@=0.34579125714758(double)
# Dest: GF@&pomFloat=3.787254315236229(double)
# Executing instruction: IADD at line: 39 with following arguments:
# Arg1: GF@&pomFloat=4.13304557238381(double)
# Arg2: Const@=0.72488219091896(double)
# Dest: GF@&pomFloat=4.13304557238381(double)
# Executing instruction: IADD at line: 40 with following arguments:
# Arg1: GF@&pomFloat=4.85792776330277(double)
# Arg2: Const@=0.95435832857823(double)
# Dest: GF@&pomFloat=4.85792776330277(double)
# Executing instruction: IADD at line: 41 with following arguments:
# Arg1: GF@&pomFloat=5.812286091880999(double)
# Arg2: Const@=0.018903809608381(double)
# Dest: GF@&pomFloat=5.812286091880999(double)
# Executing instruction: IADD at line: 42 with following arguments:
# Arg1: GF@&pomFloat=5.83118990148938(double)
# Arg2: Const@=0.8041277959962(double)
# Dest: GF@&pomFloat=5.83118990148938(double)
# Executing instruction: IADD at line: 43 with following arguments:
# Arg1: GF@&pomFloat=6.63531769748558(double)
# Arg2: Const@=0.023946794226741(double)
# Dest: GF@&pomFloat=6.63531769748558(double)
# Executing instruction: ISUB at line: 44 with following arguments:
# Arg1: GF@&pomFloat=6.659264491712321(double)
# Arg2: Const@=0.77646734974183(double)
# Dest: GF@&pomFloat=6.659264491712321(double)
# Executing instruction: ISUB at line: 45 with following arguments:
# Arg1: GF@&pomFloat=5.882797141970491(double)
# Arg2: Const@=0.23172008769201(double)
# Dest: GF@&pomFloat=5.882797141970491(double)
# Executing instruction: IADD at line: 46 with following arguments:
# Arg1: GF@&pomFloat=5.65107705427848(double)
# Arg2: Const@=0.84111053582333(double)
# Dest: GF@&pomFloat=5.65107705427848(double)
# Executing instruction: IADD at line: 47 with following arguments:
# Arg1: GF@&pomFloat=6.49218759010181(double)
# Arg2: Const@=0.4591088306434(double)
# Dest: GF@&pomFloat=6.49218759010181(double)
# Executing instruction: ISUB at line: 48 with following arguments:
# Arg1: GF@&pomFloat=6.95129642074521(double)
# Arg2: Const@=0.19041681903899(double)
# Dest: GF@&pomFloat=6.95129642074521(double)
# Executing instruction: IADD at line: 49 with following arguments:
# Arg1: GF@&pomFloat=6.76087960170622(double)
# Arg2: Const@=0.9823671313851901(double)
# Dest: GF@&pomFloat=6.76087960170622(double)
# Executing instruction: ISUB at line: 50 with following arguments:
# Arg1: GF@&pomFloat=7.74324673309141(double)
# Arg2: Const@=0.11567312298141(double)
# Dest: GF@&pomFloat=7.74324673309141(double)
# Executing instruction: ISUB at line: 51 with following arguments:
# Arg1: GF@&pomFloat=7.62757361011(double)
# Arg2: Const@=0.56689354989999(double)
# Dest: GF@&pomFloat=7.62757361011(double)
# Executing instruction: IADD at line: 52 with following arguments:
# Arg1: GF@&pomFloat=7.06068006021001(double)
# Arg2: Const@=0.63308663090369(double)
# Dest: GF@&pomFloat=7.06068006021001(double)
# Executing instruction: IADD at line: 53 with following arguments:
# Arg1: GF@&pomFloat=7.6937666911137(double)
# Arg2: Const@=0.54199194281455(double)
# Dest: GF@&pomFloat=7.6937666911137(double)
# Executing instruction: ISUB at line: 54 with following arguments:
# Arg1: GF@&pomFloat=8.235758633928249(double)
# Arg2: Const@=0.042272554730192(double)
# Dest: GF@&pomFloat=8.235758633928249(double)
# Executing instruction: IADD at line: 55 with following arguments:
# Arg1: GF@&pomFloat=8.193486079198058(double)
# Arg2: Const@=0.38295422977905(double)
# Dest: GF@&pomFloat=8.193486079198058(double)
# Executing instruction: IADD at line: 56 with following arguments:
# Arg1: GF@&pomFloat=8.576440308977109(double)
# Arg2: Const@=0.9580045537827599(double)
# Dest: GF@&pomFloat=8.576440308977109(double)
# Executing instruction: IADD at line: 57 with following arguments:
# Arg1: GF@&pomFloat=9.534444862759869(double)
# Arg2: Const@=0.036290351783992(double)
# Dest: GF@&pomFloat=9.534444862759869(double)
# Executing instruction: ISUB at line: 58 with following arguments:
# Arg1: GF@&pomFloat=9.570735214543861(double)
# Arg2: Const@=0.63809956313954(double)
# Dest: GF@&pomFloat=9.570735214543861(double)
# Executing instruction: ISUB at line: 59 with following arguments:
# Arg1: GF@&pomFloat=8.93263565140432(double)
# Arg2: Const@=0.84864554081515(double)
# Dest: GF@&pomFloat=8.93263565140432(double)
# Executing instruction: ISUB at line: 60 with following arguments:
# Arg1: GF@&pomFloat=8.08399011058917(double)
# Arg2: Const@=0.97947909262938(double)
# Dest: GF@&pomFloat=8.08399011058917(double)
# Executing instruction: IADD at line: 61 with following arguments:
# Arg1: GF@&pomFloat=7.10451101795979(double)
# Arg2: Const@=0.82777797096771(double)
# Dest: GF@&pomFloat=7.10451101795979(double)
# Executing instruction: IADD at line: 62 with following arguments:
# Arg1: GF@&pomFloat=7.9322889889275(double)
# Arg2: Const@=0.95212024215242(double)
# Dest: GF@&pomFloat=7.9322889889275(double)
# Executing instruction: ISUB at line: 63 with following arguments:
# Arg1: GF@&pomFloat=8.884409231079919(double)
# Arg2: Const@=0.39922194946521(double)
# Dest: GF@&pomFloat=8.884409231079919(double)
# Executing instruction: IADD at line: 64 with following arguments:
# Arg1: GF@&pomFloat=8.48518728161471(double)
# Arg2: Const@=0.92141141552544(double)
# Dest: GF@&pomFloat=8.48518728161471(double)
# Executing instruction: ISUB at line: 65 with following arguments:
# Arg1: GF@&pomFloat=9.406598697140151(double)
# Arg2: Const@=0.19430580697689(double)
# Dest: GF@&pomFloat=9.406598697140151(double)
# Executing instruction: ISUB at line: 66 with following arguments:
# Arg1: GF@&pomFloat=9.21229289016326(double)
# Arg2: Const@=0.64444554347752(double)
# Dest: GF@&pomFloat=9.21229289016326(double)
# Executing instruction: ISUB at line: 67 with following arguments:
# Arg1: GF@&pomFloat=8.56784734668574(double)
# Arg2: Const@=0.32520966060702(double)
# Dest: GF@&pomFloat=8.56784734668574(double)
# Executing instruction: ISUB at line: 68 with following arguments:
# Arg1: GF@&pomFloat=8.242637686078719(double)
# Arg2: Const@=0.57075888131315(double)
# Dest: GF@&pomFloat=8.242637686078719(double)
# Executing instruction: ISUB at line: 69 with following arguments:
# Arg1: GF@&pomFloat=7.671878804765569(double)
# Arg2: Const@=0.77997415549121(double)
# Dest: GF@&pomFloat=7.671878804765569(double)
# Executing instruction: ISUB at line: 70 with following arguments:
# Arg1: GF@&pomFloat=6.891904649274359(double)
# Arg2: Const@=0.95823753343813(double)
# Dest: GF@&pomFloat=6.891904649274359(double)
# Executing instruction: ISUB at line: 71 with following arguments:
# Arg1: GF@&pomFloat=5.933667115836229(double)
# Arg2: Const@=0.11608309443858(double)
# Dest: GF@&pomFloat=5.933667115836229(double)
# Executing instruction: ISUB at line: 72 with following arguments:
# Arg1: GF@&pomFloat=5.817584021397649(double)
# Arg2: Const@=0.7594201940854201(double)
# Dest: GF@&pomFloat=5.817584021397649(double)
# Executing instruction: ISUB at line: 73 with following arguments:
# Arg1: GF@&pomFloat=5.058163827312229(double)
# Arg2: Const@=0.82284970247319(double)
# Dest: GF@&pomFloat=5.058163827312229(double)
# Executing instruction: ISUB at line: 74 with following arguments:
# Arg1: GF@&pomFloat=4.235314124839039(double)
# Arg2: Const@=0.91226126948011(double)
# Dest: GF@&pomFloat=4.235314124839039(double)
# Executing instruction: ISUB at line: 75 with following arguments:
# Arg1: GF@&pomFloat=3.323052855358929(double)
# Arg2: Const@=0.93316854859384(double)
# Dest: GF@&pomFloat=3.323052855358929(double)
# Executing instruction: IADD at line: 76 with following arguments:
# Arg1: GF@&pomFloat=2.389884306765089(double)
# Arg2: Const@=0.89463229332801(double)
# Dest: GF@&pomFloat=2.389884306765089(double)
# Executing instruction: IADD at line: 77 with following arguments:
# Arg1: GF@&pomFloat=3.284516600093099(double)
# Arg2: Const@=0.34335702999651(double)
# Dest: GF@&pomFloat=3.284516600093099(double)
# Executing instruction: ISUB at line: 78 with following arguments:
# Arg1: GF@&pomFloat=3.627873630089609(double)
# Arg2: Const@=0.38929377560937(double)
# Dest: GF@&pomFloat=3.627873630089609(double)
# Executing instruction: IADD at line: 79 with following arguments:
# Arg1: GF@&pomFloat=3.238579854480239(double)
# Arg2: Const@=0.82994798562953(double)
# Dest: GF@&pomFloat=3.238579854480239(double)
# Executing instruction: ISUB at line: 80 with following arguments:
# Arg1: GF@&pomFloat=4.068527840109769(double)
# Arg2: Const@=0.87888436013781(double)
# Dest: GF@&pomFloat=4.068527840109769(double)
# Executing instruction: ISUB at line: 81 with following arguments:
# Arg1: GF@&pomFloat=3.189643479971959(double)
# Arg2: Const@=0.35640355262738(double)
# Dest: GF@&pomFloat=3.189643479971959(double)
# Executing instruction: ISUB at line: 82 with following arguments:
# Arg1: GF@&pomFloat=2.833239927344579(double)
# Arg2: Const@=0.21351195416111(double)
# Dest: GF@&pomFloat=2.833239927344579(double)
# Executing instruction: IADD at line: 83 with following arguments:
# Arg1: GF@&pomFloat=2.619727973183469(double)
# Arg2: Const@=0.23747843654709(double)
# Dest: GF@&pomFloat=2.619727973183469(double)
# Executing instruction: IADD at line: 84 with following arguments:
# Arg1: GF@&pomFloat=2.857206409730559(double)
# Arg2: Const@=0.41442929227577(double)
# Dest: GF@&pomFloat=2.857206409730559(double)
# Executing instruction: IADD at line: 85 with following arguments:
# Arg1: GF@&pomFloat=3.271635702006328(double)
# Arg2: Const@=0.6511562115751(double)
# Dest: GF@&pomFloat=3.271635702006328(double)
# Executing instruction: ISUB at line: 86 with following arguments:
# Arg1: GF@&pomFloat=3.922791913581428(double)
# Arg2: Const@=0.43560120204259(double)
# Dest: GF@&pomFloat=3.922791913581428(double)
# Executing instruction: IADD at line: 87 with following arguments:
# Arg1: GF@&pomFloat=3.487190711538839(double)
# Arg2: Const@=0.16913385045209(double)
# Dest: GF@&pomFloat=3.487190711538839(double)
# Executing instruction: IADD at line: 88 with following arguments:
# Arg1: GF@&pomFloat=3.656324561990929(double)
# Arg2: Const@=0.39923315606976(double)
# Dest: GF@&pomFloat=3.656324561990929(double)
# Executing instruction: IADD at line: 89 with following arguments:
# Arg1: GF@&pomFloat=4.055557718060689(double)
# Arg2: Const@=0.7393373077452799(double)
# Dest: GF@&pomFloat=4.055557718060689(double)
# Executing instruction: IADD at line: 90 with following arguments:
# Arg1: GF@&pomFloat=4.794895025805968(double)
# Arg2: Const@=0.8880486087352299(double)
# Dest: GF@&pomFloat=4.794895025805968(double)
# Executing instruction: ISUB at line: 91 with following arguments:
# Arg1: GF@&pomFloat=5.682943634541198(double)
# Arg2: Const@=0.97775317215256(double)
# Dest: GF@&pomFloat=5.682943634541198(double)
# Executing instruction: ISUB at line: 92 with following arguments:
# Arg1: GF@&pomFloat=4.705190462388638(double)
# Arg2: Const@=0.93239587169718(double)
# Dest: GF@&pomFloat=4.705190462388638(double)
# Executing instruction: IADD at line: 93 with following arguments:
# Arg1: GF@&pomFloat=3.772794590691459(double)
# Arg2: Const@=0.86142201389252(double)
# Dest: GF@&pomFloat=3.772794590691459(double)
# Executing instruction: IADD at line: 94 with following arguments:
# Arg1: GF@&pomFloat=4.634216604583979(double)
# Arg2: Const@=0.24544257309541(double)
# Dest: GF@&pomFloat=4.634216604583979(double)
# Executing instruction: ISUB at line: 95 with following arguments:
# Arg1: GF@&pomFloat=4.879659177679389(double)
# Arg2: Const@=0.72288686815784(double)
# Dest: GF@&pomFloat=4.879659177679389(double)
# Executing instruction: IADD at line: 96 with following arguments:
# Arg1: GF@&pomFloat=4.156772309521549(double)
# Arg2: Const@=0.5031232561465(double)
# Dest: GF@&pomFloat=4.156772309521549(double)
# Executing instruction: IADD at line: 97 with following arguments:
# Arg1: GF@&pomFloat=4.659895565668049(double)
# Arg2: Const@=0.37358963553495(double)
# Dest: GF@&pomFloat=4.659895565668049(double)
# Executing instruction: ISUB at line: 98 with following arguments:
# Arg1: GF@&pomFloat=5.033485201202999(double)
# Arg2: Const@=0.34539146877145(double)
# Dest: GF@&pomFloat=5.033485201202999(double)
# Executing instruction: ISUB at line: 99 with following arguments:
# Arg1: GF@&pomFloat=4.688093732431549(double)
# Arg2: Const@=0.24450102273584(double)
# Dest: GF@&pomFloat=4.688093732431549(double)
# Executing instruction: ISUB at line: 100 with following arguments:
# Arg1: GF@&pomFloat=4.443592709695708(double)
# Arg2: Const@=0.22434624341519(double)
# Dest: GF@&pomFloat=4.443592709695708(double)
# Executing instruction: IADD at line: 101 with following arguments:
# Arg1: GF@&pomFloat=4.219246466280518(double)
# Arg2: Const@=0.4058097044033(double)
# Dest: GF@&pomFloat=4.219246466280518(double)
# Executing instruction: ISUB at line: 102 with following arguments:
# Arg1: GF@&pomFloat=4.625056170683818(double)
# Arg2: Const@=0.54116594024988(double)
# Dest: GF@&pomFloat=4.625056170683818(double)
# Executing instruction: ISUB at line: 103 with following arguments:
# Arg1: GF@&pomFloat=4.083890230433938(double)
# Arg2: Const@=0.7173163135150999(double)
# Dest: GF@&pomFloat=4.083890230433938(double)
# Executing instruction: IADD at line: 104 with following arguments:
# Arg1: GF@&pomFloat=3.366573916918838(double)
# Arg2: Const@=0.90828158841854(double)
# Dest: GF@&pomFloat=3.366573916918838(double)
# Executing instruction: IADD at line: 105 with following arguments:
# Arg1: GF@&pomFloat=4.274855505337378(double)
# Arg2: Const@=0.48578712832452(double)
# Dest: GF@&pomFloat=4.274855505337378(double)
# Executing instruction: ISUB at line: 106 with following arguments:
# Arg1: GF@&pomFloat=4.760642633661898(double)
# Arg2: Const@=0.89055054443448(double)
# Dest: GF@&pomFloat=4.760642633661898(double)
# Executing instruction: ISUB at line: 107 with following arguments:
# Arg1: GF@&pomFloat=3.870092089227418(double)
# Arg2: Const@=0.70156869138664(double)
# Dest: GF@&pomFloat=3.870092089227418(double)
# Executing instruction: ISUB at line: 108 with following arguments:
# Arg1: GF@&pomFloat=3.168523397840778(double)
# Arg2: Const@=0.052272440889977(double)
# Dest: GF@&pomFloat=3.168523397840778(double)
# Executing instruction: ISUB at line: 109 with following arguments:
# Arg1: GF@&pomFloat=3.116250956950801(double)
# Arg2: Const@=0.67214471924684(double)
# Dest: GF@&pomFloat=3.116250956950801(double)
# Executing instruction: ISUB at line: 110 with following arguments:
# Arg1: GF@&pomFloat=2.444106237703961(double)
# Arg2: Const@=0.7583599895045(double)
# Dest: GF@&pomFloat=2.444106237703961(double)
# Executing instruction: ISUB at line: 111 with following arguments:
# Arg1: GF@&pomFloat=1.685746248199461(double)
# Arg2: Const@=0.57597289447485(double)
# Dest: GF@&pomFloat=1.685746248199461(double)
# Executing instruction: IADD at line: 112 with following arguments:
# Arg1: GF@&pomFloat=1.109773353724611(double)
# Arg2: Const@=0.28093752231493(double)
# Dest: GF@&pomFloat=1.109773353724611(double)
# Executing instruction: ISUB at line: 113 with following arguments:
# Arg1: GF@&pomFloat=1.390710876039541(double)
# Arg2: Const@=0.9489006981947(double)
# Dest: GF@&pomFloat=1.390710876039541(double)
# Executing instruction: ISUB at line: 114 with following arguments:
# Arg1: GF@&pomFloat=0.441810177844841(double)
# Arg2: Const@=0.15001685784665(double)
# Dest: GF@&pomFloat=0.441810177844841(double)
# Executing instruction: IADD at line: 115 with following arguments:
# Arg1: GF@&pomFloat=0.291793319998191(double)
# Arg2: Const@=0.78178339720787(double)
# Dest: GF@&pomFloat=0.291793319998191(double)
# Executing instruction: ISUB at line: 116 with following arguments:
# Arg1: GF@&pomFloat=1.073576717206061(double)
# Arg2: Const@=0.46734504702843(double)
# Dest: GF@&pomFloat=1.073576717206061(double)
# Executing instruction: ISUB at line: 117 with following arguments:
# Arg1: GF@&pomFloat=0.6062316701776311(double)
# Arg2: Const@=0.6044920913896(double)
# Dest: GF@&pomFloat=0.6062316701776311(double)
# Executing instruction: ISUB at line: 118 with following arguments:
# Arg1: GF@&pomFloat=0.001739578788031104(double)
# Arg2: Const@=0.31241466911156(double)
# Dest: GF@&pomFloat=0.001739578788031104(double)
# Executing instruction: ISUB at line: 119 with following arguments:
# Arg1: GF@&pomFloat=-0.3106750903235289(double)
# Arg2: Const@=0.70392135889452(double)
# Dest: GF@&pomFloat=-0.3106750903235289(double)
# Executing instruction: IMOVE at line: 120 with following arguments:
# Arg1: GF@&pomFloat=-1.014596449218049(double)
# Dest: TF@a=0(double)
# Executing instruction: IWRITE at line: 121 with following arguments:
# Arg1: TF@a=-1.014596449218049(double)
# Executing instruction: IGROOT at line: 123 with following arguments:
# I am Groot at 123 (1390).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 1390 (422+968)
# GROOT: 1390
# 
#   1: ' Big number of float integers +-
#   2: scope
#   3:     dim a as double
#   4:     a =  0.15392032971323+0.45034736183022-0.22857732755531-0.10393178095293+0.5770683007208-0.20937356036593+0.88500488311285-0.17863870280731-0.43715851168947-0.63981254568315+0.80222906768426+0.90395464929936-0.22485914231504+0.80677499659675+0.33955973030047-0.55546566357625+0.48636960121168+0.24275394354144+0.71708868617056+0.34579125714758+0.72488219091896+0.95435832857823+0.018903809608381+0.8041277959962+0.023946794226741-0.77646734974183-0.23172008769201+0.84111053582333+0.4591088306434-0.19041681903899+0.98236713138519-0.11567312298141-0.56689354989999+0.63308663090369+0.54199194281455-0.042272554730192+0.38295422977905+0.95800455378276+0.036290351783992-0.63809956313954-0.84864554081515-0.97947909262938+0.82777797096771+0.95212024215242-0.39922194946521+0.92141141552544-0.19430580697689-0.64444554347752-0.32520966060702-0.57075888131315-0.77997415549121-0.95823753343813-0.11608309443858-0.75942019408542-0.82284970247319-0.91226126948011-0.93316854859384+0.89463229332801+0.34335702999651-0.38929377560937+0.82994798562953-0.87888436013781-0.35640355262738-0.21351195416111+0.23747843654709+0.41442929227577+0.6511562115751-0.43560120204259+0.16913385045209+0.39923315606976+0.73933730774528+0.88804860873523-0.97775317215256-0.93239587169718+0.86142201389252+0.24544257309541-0.72288686815784+0.5031232561465+0.37358963553495-0.34539146877145-0.24450102273584-0.22434624341519+0.4058097044033-0.54116594024988-0.7173163135151+0.90828158841854+0.48578712832452-0.89055054443448-0.70156869138664-0.052272440889977-0.67214471924684-0.7583599895045-0.57597289447485+0.28093752231493-0.9489006981947-0.15001685784665+0.78178339720787-0.46734504702843-0.6044920913896-0.31241466911156-0.70392135889452
#   5:     
#   6:     print a;
#   7:     
#   8: 
#   9: end scope

########################################

.IFJcode17                                                                      #     1/121
JUMP $$scope                                                                    #     2/121
LABEL $$scope                                                                   #     4/121
DEFVAR GF@&pomInteger                                                           #     5/121
MOVE GF@&pomInteger int@0                                                       #     6/121
DEFVAR GF@&pomString                                                            #     7/121
MOVE GF@&pomString string@                                                      #     8/121
DEFVAR GF@&pomFloat                                                             #     9/121
MOVE GF@&pomFloat float@0                                                       #    10/121
DEFVAR GF@&pomBool                                                              #    11/121
MOVE GF@&pomBool bool@false                                                     #    12/121
DEFVAR GF@&pomCntr                                                              #    13/121
MOVE GF@&pomCntr int@0                                                          #    14/121
CREATEFRAME                                                                     #    15/121
DEFVAR TF@a                                                                     #    17/121
MOVE TF@a float@0                                                               #    18/121
MOVE GF@&pomFloat float@0.15392032971323                                        #    19/121
ADD GF@&pomFloat float@0.15392032971323 float@0.45034736183022                  #    20/121
SUB GF@&pomFloat GF@&pomFloat float@0.22857732755531                            #    21/121
SUB GF@&pomFloat GF@&pomFloat float@0.10393178095293                            #    22/121
ADD GF@&pomFloat GF@&pomFloat float@0.5770683007208                             #    23/121
SUB GF@&pomFloat GF@&pomFloat float@0.20937356036593                            #    24/121
ADD GF@&pomFloat GF@&pomFloat float@0.88500488311285                            #    25/121
SUB GF@&pomFloat GF@&pomFloat float@0.17863870280731                            #    26/121
SUB GF@&pomFloat GF@&pomFloat float@0.43715851168947                            #    27/121
SUB GF@&pomFloat GF@&pomFloat float@0.63981254568315                            #    28/121
ADD GF@&pomFloat GF@&pomFloat float@0.80222906768426                            #    29/121
ADD GF@&pomFloat GF@&pomFloat float@0.90395464929936                            #    30/121
SUB GF@&pomFloat GF@&pomFloat float@0.22485914231504                            #    31/121
ADD GF@&pomFloat GF@&pomFloat float@0.80677499659675                            #    32/121
ADD GF@&pomFloat GF@&pomFloat float@0.33955973030047                            #    33/121
SUB GF@&pomFloat GF@&pomFloat float@0.55546566357625                            #    34/121
ADD GF@&pomFloat GF@&pomFloat float@0.48636960121168                            #    35/121
ADD GF@&pomFloat GF@&pomFloat float@0.24275394354144                            #    36/121
ADD GF@&pomFloat GF@&pomFloat float@0.71708868617056                            #    37/121
ADD GF@&pomFloat GF@&pomFloat float@0.34579125714758                            #    38/121
ADD GF@&pomFloat GF@&pomFloat float@0.72488219091896                            #    39/121
ADD GF@&pomFloat GF@&pomFloat float@0.95435832857823                            #    40/121
ADD GF@&pomFloat GF@&pomFloat float@0.018903809608381                           #    41/121
ADD GF@&pomFloat GF@&pomFloat float@0.8041277959962                             #    42/121
ADD GF@&pomFloat GF@&pomFloat float@0.023946794226741                           #    43/121
SUB GF@&pomFloat GF@&pomFloat float@0.77646734974183                            #    44/121
SUB GF@&pomFloat GF@&pomFloat float@0.23172008769201                            #    45/121
ADD GF@&pomFloat GF@&pomFloat float@0.84111053582333                            #    46/121
ADD GF@&pomFloat GF@&pomFloat float@0.4591088306434                             #    47/121
SUB GF@&pomFloat GF@&pomFloat float@0.19041681903899                            #    48/121
ADD GF@&pomFloat GF@&pomFloat float@0.98236713138519                            #    49/121
SUB GF@&pomFloat GF@&pomFloat float@0.11567312298141                            #    50/121
SUB GF@&pomFloat GF@&pomFloat float@0.56689354989999                            #    51/121
ADD GF@&pomFloat GF@&pomFloat float@0.63308663090369                            #    52/121
ADD GF@&pomFloat GF@&pomFloat float@0.54199194281455                            #    53/121
SUB GF@&pomFloat GF@&pomFloat float@0.042272554730192                           #    54/121
ADD GF@&pomFloat GF@&pomFloat float@0.38295422977905                            #    55/121
ADD GF@&pomFloat GF@&pomFloat float@0.95800455378276                            #    56/121
ADD GF@&pomFloat GF@&pomFloat float@0.036290351783992                           #    57/121
SUB GF@&pomFloat GF@&pomFloat float@0.63809956313954                            #    58/121
SUB GF@&pomFloat GF@&pomFloat float@0.84864554081515                            #    59/121
SUB GF@&pomFloat GF@&pomFloat float@0.97947909262938                            #    60/121
ADD GF@&pomFloat GF@&pomFloat float@0.82777797096771                            #    61/121
ADD GF@&pomFloat GF@&pomFloat float@0.95212024215242                            #    62/121
SUB GF@&pomFloat GF@&pomFloat float@0.39922194946521                            #    63/121
ADD GF@&pomFloat GF@&pomFloat float@0.92141141552544                            #    64/121
SUB GF@&pomFloat GF@&pomFloat float@0.19430580697689                            #    65/121
SUB GF@&pomFloat GF@&pomFloat float@0.64444554347752                            #    66/121
SUB GF@&pomFloat GF@&pomFloat float@0.32520966060702                            #    67/121
SUB GF@&pomFloat GF@&pomFloat float@0.57075888131315                            #    68/121
SUB GF@&pomFloat GF@&pomFloat float@0.77997415549121                            #    69/121
SUB GF@&pomFloat GF@&pomFloat float@0.95823753343813                            #    70/121
SUB GF@&pomFloat GF@&pomFloat float@0.11608309443858                            #    71/121
SUB GF@&pomFloat GF@&pomFloat float@0.75942019408542                            #    72/121
SUB GF@&pomFloat GF@&pomFloat float@0.82284970247319                            #    73/121
SUB GF@&pomFloat GF@&pomFloat float@0.91226126948011                            #    74/121
SUB GF@&pomFloat GF@&pomFloat float@0.93316854859384                            #    75/121
ADD GF@&pomFloat GF@&pomFloat float@0.89463229332801                            #    76/121
ADD GF@&pomFloat GF@&pomFloat float@0.34335702999651                            #    77/121
SUB GF@&pomFloat GF@&pomFloat float@0.38929377560937                            #    78/121
ADD GF@&pomFloat GF@&pomFloat float@0.82994798562953                            #    79/121
SUB GF@&pomFloat GF@&pomFloat float@0.87888436013781                            #    80/121
SUB GF@&pomFloat GF@&pomFloat float@0.35640355262738                            #    81/121
SUB GF@&pomFloat GF@&pomFloat float@0.21351195416111                            #    82/121
ADD GF@&pomFloat GF@&pomFloat float@0.23747843654709                            #    83/121
ADD GF@&pomFloat GF@&pomFloat float@0.41442929227577                            #    84/121
ADD GF@&pomFloat GF@&pomFloat float@0.6511562115751                             #    85/121
SUB GF@&pomFloat GF@&pomFloat float@0.43560120204259                            #    86/121
ADD GF@&pomFloat GF@&pomFloat float@0.16913385045209                            #    87/121
ADD GF@&pomFloat GF@&pomFloat float@0.39923315606976                            #    88/121
ADD GF@&pomFloat GF@&pomFloat float@0.73933730774528                            #    89/121
ADD GF@&pomFloat GF@&pomFloat float@0.88804860873523                            #    90/121
SUB GF@&pomFloat GF@&pomFloat float@0.97775317215256                            #    91/121
SUB GF@&pomFloat GF@&pomFloat float@0.93239587169718                            #    92/121
ADD GF@&pomFloat GF@&pomFloat float@0.86142201389252                            #    93/121
ADD GF@&pomFloat GF@&pomFloat float@0.24544257309541                            #    94/121
SUB GF@&pomFloat GF@&pomFloat float@0.72288686815784                            #    95/121
ADD GF@&pomFloat GF@&pomFloat float@0.5031232561465                             #    96/121
ADD GF@&pomFloat GF@&pomFloat float@0.37358963553495                            #    97/121
SUB GF@&pomFloat GF@&pomFloat float@0.34539146877145                            #    98/121
SUB GF@&pomFloat GF@&pomFloat float@0.24450102273584                            #    99/121
SUB GF@&pomFloat GF@&pomFloat float@0.22434624341519                            #   100/121
ADD GF@&pomFloat GF@&pomFloat float@0.4058097044033                             #   101/121
SUB GF@&pomFloat GF@&pomFloat float@0.54116594024988                            #   102/121
SUB GF@&pomFloat GF@&pomFloat float@0.7173163135151                             #   103/121
ADD GF@&pomFloat GF@&pomFloat float@0.90828158841854                            #   104/121
ADD GF@&pomFloat GF@&pomFloat float@0.48578712832452                            #   105/121
SUB GF@&pomFloat GF@&pomFloat float@0.89055054443448                            #   106/121
SUB GF@&pomFloat GF@&pomFloat float@0.70156869138664                            #   107/121
SUB GF@&pomFloat GF@&pomFloat float@0.052272440889977                           #   108/121
SUB GF@&pomFloat GF@&pomFloat float@0.67214471924684                            #   109/121
SUB GF@&pomFloat GF@&pomFloat float@0.7583599895045                             #   110/121
SUB GF@&pomFloat GF@&pomFloat float@0.57597289447485                            #   111/121
ADD GF@&pomFloat GF@&pomFloat float@0.28093752231493                            #   112/121
SUB GF@&pomFloat GF@&pomFloat float@0.9489006981947                             #   113/121
SUB GF@&pomFloat GF@&pomFloat float@0.15001685784665                            #   114/121
ADD GF@&pomFloat GF@&pomFloat float@0.78178339720787                            #   115/121
SUB GF@&pomFloat GF@&pomFloat float@0.46734504702843                            #   116/121
SUB GF@&pomFloat GF@&pomFloat float@0.6044920913896                             #   117/121
SUB GF@&pomFloat GF@&pomFloat float@0.31241466911156                            #   118/121
SUB GF@&pomFloat GF@&pomFloat float@0.70392135889452                            #   119/121
MOVE TF@a GF@&pomFloat                                                          #   120/121
WRITE TF@a                                                                      #   121/121

