# 2017-12-04 12:08:01.242937
# SECTION: 05_conditions
# TEST: 13
# INFO: Compare equal input strings
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# 24.1-7: syntax error, unexpected ID, expecting END
# 
# EXPECTED INTERPRETER STDOUT:

# ? ?  42


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# Ahojky
# Ahojky
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 51
# PRICE: ---
# GROOT: ---
# 
#   1: ' Compare equal input strings
#   2: scope
#   3: 
#   4: 	dim a as string
#   5: 	dim b as string
#   6: 	input a
#   7: 	input b
#   8: 	if a = b then
#   9: 		print 42;
#  10: 	else
#  11: 		print 43;	
#  12: 	end if
#  13: end scope

########################################

.IFJcode17                                                                      #     1/31
JUMP $$scope                                                                    #     2/31
LABEL $$scope                                                                   #     4/31
DEFVAR GF@&pomInteger                                                           #     5/31
MOVE GF@&pomInteger int@0                                                       #     6/31
DEFVAR GF@&pomString                                                            #     7/31
MOVE GF@&pomString string@                                                      #     8/31
DEFVAR GF@&pomFloat                                                             #     9/31
MOVE GF@&pomFloat float@0                                                       #    10/31
DEFVAR GF@&pomBool                                                              #    11/31
MOVE GF@&pomBool bool@false                                                     #    12/31
DEFVAR GF@&pomCntr                                                              #    13/31
MOVE GF@&pomCntr int@0                                                          #    14/31
CREATEFRAME                                                                     #    15/31
DEFVAR TF@a                                                                     #    17/31
MOVE TF@a string@                                                               #    18/31
DEFVAR TF@b                                                                     #    19/31
MOVE TF@b string@                                                               #    20/31
READ TF@a string                                                                #    21/31
READ TF@b string                                                                #    22/31
MOVE GF@&pomString TF@a                                                         #    23/31
redukce                                                                         #    24/31
EQ GF@&pomBool TF@a TF@b                                                        #    25/31
JUMPIFNEQ $$else_1 GF@&pomBool bool@true                                        #    26/31
WRITE TF@42                                                                     #    27/31
JUMP $$endif_1                                                                  #    28/31
LABEL $$else_1                                                                  #    29/31
WRITE TF@43                                                                     #    30/31
LABEL $$endif_1                                                                 #    31/31

