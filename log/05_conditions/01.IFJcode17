# 2017-12-04 15:33:12.612184
# SECTION: 05_conditions
# TEST: 01
# INFO: most simple if statement
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 4 with following arguments:
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@&pomInteger
# Executing instruction: IMOVE at line: 6 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@&pomInteger()
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@&pomString
# Executing instruction: IMOVE at line: 8 with following arguments:
# Arg1: Const@=(string)
# Dest: GF@&pomString()
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@&pomFloat
# Executing instruction: IMOVE at line: 10 with following arguments:
# Arg1: Const@=0(double)
# Dest: GF@&pomFloat()
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: GF@&pomBool
# Executing instruction: IMOVE at line: 12 with following arguments:
# Arg1: Const@=false(bool)
# Dest: GF@&pomBool()
# Executing instruction: IDEFVAR at line: 13 with following arguments:
# Dest: GF@&pomCntr
# Executing instruction: IMOVE at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@&pomCntr()
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IGT at line: 17 with following arguments:
# Arg1: Const@=8(int)
# Arg2: Const@=3(int)
# Dest: GF@&pomBool=false(bool)
# Executing instruction: IJUMPIFNEQ at line: 18 with following arguments:
# Arg1: GF@&pomBool=true(bool)
# Arg2: Const@=true(bool)
# Executing instruction: IWRITE at line: 19 with following arguments:
# Arg1: Const@=42(int)
# Executing instruction: IJUMP at line: 20 with following arguments:
# Executing instruction: ILABEL at line: 23 with following arguments:
# Executing instruction: IGROOT at line: 25 with following arguments:
# I am Groot at 25 (83).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 83 (26+57)
# GROOT: 83
# 
#   1: ' most simple if statement
#   2: scope
#   3: 	if 8 > 3 then
#   4: 		print 42;
#   5: 	else
#   6: 		print 58;
#   7: 	end if
#   8: end scope

########################################

.IFJcode17                                                                      #     1/23
JUMP $$scope                                                                    #     2/23
LABEL $$scope                                                                   #     4/23
DEFVAR GF@&pomInteger                                                           #     5/23
MOVE GF@&pomInteger int@0                                                       #     6/23
DEFVAR GF@&pomString                                                            #     7/23
MOVE GF@&pomString string@                                                      #     8/23
DEFVAR GF@&pomFloat                                                             #     9/23
MOVE GF@&pomFloat float@0                                                       #    10/23
DEFVAR GF@&pomBool                                                              #    11/23
MOVE GF@&pomBool bool@false                                                     #    12/23
DEFVAR GF@&pomCntr                                                              #    13/23
MOVE GF@&pomCntr int@0                                                          #    14/23
CREATEFRAME                                                                     #    15/23
GT GF@&pomBool int@8 int@3                                                      #    17/23
JUMPIFNEQ $$else_1 GF@&pomBool bool@true                                        #    18/23
WRITE int@42                                                                    #    19/23
JUMP $$endif_1                                                                  #    20/23
LABEL $$else_1                                                                  #    21/23
WRITE int@58                                                                    #    22/23
LABEL $$endif_1                                                                 #    23/23

