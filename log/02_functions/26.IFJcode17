# 2017-12-04 15:33:12.308072
# SECTION: 02_functions
# TEST: 26
# INFO: Multiple return inside function
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# 4.1-8: syntax error, unexpected ID, expecting END
# 
# EXPECTED INTERPRETER STDOUT:

#  42


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 51
# PRICE: ---
# GROOT: ---
# 
#   1: ' Multiple return inside function
#   2: 
#   3: function foo() as integer
#   4: 	return 42
#   5: 	return 31
#   6: 	return 22
#   7: end function
#   8: 
#   9: scope
#  10: 	dim b as integer
#  11: 	b = foo()
#  12: 	print b;
#  13: end scope

########################################

.IFJcode17                                                                      #     1/29
JUMP $$scope                                                                    #     2/29
rule_par                                                                        #     4/29
LABEL $foo                                                                      #     5/29
PUSHFRAME                                                                       #     6/29
DEFVAR LF@&retval                                                               #     7/29
MOVE LF@&retval GF@&pomInteger                                                  #     8/29
POPFRAME                                                                        #     9/29
RETURN                                                                          #    10/29
LABEL $$scope                                                                   #    12/29
DEFVAR GF@&pomInteger                                                           #    13/29
MOVE GF@&pomInteger int@0                                                       #    14/29
DEFVAR GF@&pomString                                                            #    15/29
MOVE GF@&pomString string@                                                      #    16/29
DEFVAR GF@&pomFloat                                                             #    17/29
MOVE GF@&pomFloat float@0                                                       #    18/29
DEFVAR GF@&pomBool                                                              #    19/29
MOVE GF@&pomBool bool@false                                                     #    20/29
DEFVAR GF@&pomCntr                                                              #    21/29
MOVE GF@&pomCntr int@0                                                          #    22/29
CREATEFRAME                                                                     #    23/29
DEFVAR TF@b                                                                     #    25/29
MOVE TF@b int@0                                                                 #    26/29
CALL $foo                                                                       #    27/29
MOVE TF@b TF@&retval                                                            #    28/29
WRITE TF@b                                                                      #    29/29

