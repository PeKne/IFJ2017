# 2017-12-04 12:08:01.038111
# SECTION: 02_functions
# TEST: 27
# INFO: Condition return
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# ERROR - 2 - chyba v programu v rÃ¡mci syntaktickÃ© analÃ½zy (chybnÃ¡ syntaxe programu).
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:

#  0


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 4
# CURRENT COMPILER EXIT CODE: 2
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: ' Condition return
#   2: 
#   3: function get_integer(a as integer) as integer
#   4: 	if a < 2 then
#   5: 		return 42
#   6: 	else
#   7: 	end if
#   8: end function
#   9: 
#  10: scope
#  11: 	dim b as string
#  12: 	b = get_integer(25)
#  13: 	print b;
#  14: end scope

########################################

.IFJcode17                                                                      #     1/35
JUMP $$scope                                                                    #     2/35
rule_par                                                                        #     4/35
rule next par                                                                   #     5/35
LABEL $get_integer                                                              #     6/35
PUSHFRAME                                                                       #     7/35
DEFVAR LF@&retval                                                               #     8/35
MOVE GF@&pomInteger LF@a                                                        #     9/35
redukce                                                                         #    10/35
LT GF@&pomBool LF@a int@2                                                       #    11/35
JUMPIFNEQ $$else_1 GF@&pomBool bool@true                                        #    12/35
JUMP $$endif_1                                                                  #    13/35
LABEL $$else_1                                                                  #    14/35
LABEL $$endif_1                                                                 #    15/35
MOVE LF@&retval GF@&pomInteger                                                  #    16/35
POPFRAME                                                                        #    17/35
RETURN                                                                          #    18/35
LABEL $$scope                                                                   #    20/35
DEFVAR GF@&pomInteger                                                           #    21/35
MOVE GF@&pomInteger int@0                                                       #    22/35
DEFVAR GF@&pomString                                                            #    23/35
MOVE GF@&pomString string@                                                      #    24/35
DEFVAR GF@&pomFloat                                                             #    25/35
MOVE GF@&pomFloat float@0                                                       #    26/35
DEFVAR GF@&pomBool                                                              #    27/35
MOVE GF@&pomBool bool@false                                                     #    28/35
DEFVAR GF@&pomCntr                                                              #    29/35
MOVE GF@&pomCntr int@0                                                          #    30/35
CREATEFRAME                                                                     #    31/35
DEFVAR TF@b                                                                     #    33/35
MOVE TF@b string@                                                               #    34/35
ERROR on line 12                                                                #    35/35

