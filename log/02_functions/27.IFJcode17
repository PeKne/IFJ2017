# 2017-12-04 15:33:12.309725
# SECTION: 02_functions
# TEST: 27
# INFO: Condition return
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# ERROR - 2 - chyba v programu v rÃ¡mci syntaktickÃ© analÃ½zy (chybnÃ¡ syntaxe programu).
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:

#  0


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 4
# CURRENT COMPILER EXIT CODE: 2
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: ' Condition return
#   2: 
#   3: function get_integer(a as integer) as integer
#   4: 	if a < 2 then
#   5: 		return 42
#   6: 	else
#   7: 	end if
#   8: end function
#   9: 
#  10: scope
#  11: 	dim b as string
#  12: 	b = get_integer(25)
#  13: 	print b;
#  14: end scope

########################################

.IFJcode17                                                                      #     1/34
JUMP $$scope                                                                    #     2/34
rule_par                                                                        #     4/34
rule next par                                                                   #     5/34
LABEL $get_integer                                                              #     6/34
PUSHFRAME                                                                       #     7/34
DEFVAR LF@&retval                                                               #     8/34
MOVE GF@&pomInteger LF@a                                                        #     9/34
LT GF@&pomBool LF@a int@2                                                       #    10/34
JUMPIFNEQ $$else_1 GF@&pomBool bool@true                                        #    11/34
JUMP $$endif_1                                                                  #    12/34
LABEL $$else_1                                                                  #    13/34
LABEL $$endif_1                                                                 #    14/34
MOVE LF@&retval GF@&pomInteger                                                  #    15/34
POPFRAME                                                                        #    16/34
RETURN                                                                          #    17/34
LABEL $$scope                                                                   #    19/34
DEFVAR GF@&pomInteger                                                           #    20/34
MOVE GF@&pomInteger int@0                                                       #    21/34
DEFVAR GF@&pomString                                                            #    22/34
MOVE GF@&pomString string@                                                      #    23/34
DEFVAR GF@&pomFloat                                                             #    24/34
MOVE GF@&pomFloat float@0                                                       #    25/34
DEFVAR GF@&pomBool                                                              #    26/34
MOVE GF@&pomBool bool@false                                                     #    27/34
DEFVAR GF@&pomCntr                                                              #    28/34
MOVE GF@&pomCntr int@0                                                          #    29/34
CREATEFRAME                                                                     #    30/34
DEFVAR TF@b                                                                     #    32/34
MOVE TF@b string@                                                               #    33/34
ERROR on line 12                                                                #    34/34

