# 2017-12-04 15:33:12.313685
# SECTION: 02_functions
# TEST: 28
# INFO: Colision which is OK
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# 4.1-8: syntax error, unexpected ID, expecting END
# 
# EXPECTED INTERPRETER STDOUT:

#  42


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 51
# PRICE: ---
# GROOT: ---
# 
#   1: ' Colision which is OK
#   2: function bar(foo1 as integer) as integer
#   3:     return foo1
#   4: end function
#   5: 
#   6: declare function foo1() as integer
#   7: 
#   8: function foo1() as integer
#   9:     return 42
#  10: end function
#  11: 
#  12: scope
#  13:     dim a as integer 
#  14:     a = foo1()
#  15:     print a;
#  16: end scope

########################################

.IFJcode17                                                                      #     1/39
JUMP $$scope                                                                    #     2/39
rule_par                                                                        #     4/39
rule next par                                                                   #     5/39
LABEL $bar                                                                      #     6/39
PUSHFRAME                                                                       #     7/39
DEFVAR LF@&retval                                                               #     8/39
MOVE GF@&pomInteger LF@foo1                                                     #     9/39
MOVE LF@&retval GF@&pomInteger                                                  #    10/39
POPFRAME                                                                        #    11/39
RETURN                                                                          #    12/39
rule_par                                                                        #    14/39
LABEL $foo1                                                                     #    15/39
PUSHFRAME                                                                       #    16/39
DEFVAR LF@&retval                                                               #    17/39
MOVE LF@&retval GF@&pomInteger                                                  #    18/39
POPFRAME                                                                        #    19/39
RETURN                                                                          #    20/39
LABEL $$scope                                                                   #    22/39
DEFVAR GF@&pomInteger                                                           #    23/39
MOVE GF@&pomInteger int@0                                                       #    24/39
DEFVAR GF@&pomString                                                            #    25/39
MOVE GF@&pomString string@                                                      #    26/39
DEFVAR GF@&pomFloat                                                             #    27/39
MOVE GF@&pomFloat float@0                                                       #    28/39
DEFVAR GF@&pomBool                                                              #    29/39
MOVE GF@&pomBool bool@false                                                     #    30/39
DEFVAR GF@&pomCntr                                                              #    31/39
MOVE GF@&pomCntr int@0                                                          #    32/39
CREATEFRAME                                                                     #    33/39
DEFVAR TF@a                                                                     #    35/39
MOVE TF@a int@0                                                                 #    36/39
CALL $foo1                                                                      #    37/39
MOVE TF@a TF@&retval                                                            #    38/39
WRITE TF@a                                                                      #    39/39

