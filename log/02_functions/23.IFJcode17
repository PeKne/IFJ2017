# 2017-12-04 16:26:32.337398
# SECTION: 02_functions
# TEST: 23
# INFO: invalid types without supported implicit conversion I
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# ERROR - 2 - chyba v programu v rÃ¡mci syntaktickÃ© analÃ½zy (chybnÃ¡ syntaxe programu).
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:



# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 4
# CURRENT COMPILER EXIT CODE: 2
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: ' invalid types without supported implicit conversion I
#   2: 
#   3: function get_integer(a as integer) as integer
#   4: 	return a
#   5: end function
#   6: 
#   7: scope
#   8: 	dim b as integer
#   9: 	b = get_integer(!"foo")
#  10: 	print b;
#  11: end scope

########################################

.IFJcode17                                                                      #     1/29
JUMP $$scope                                                                    #     2/29
rule_par                                                                        #     4/29
rule next par                                                                   #     5/29
LABEL $get_integer                                                              #     6/29
PUSHFRAME                                                                       #     7/29
DEFVAR LF@&retval                                                               #     8/29
MOVE GF@&pomInteger LF@a                                                        #     9/29
MOVE LF@&retval GF@&pomInteger                                                  #    10/29
POPFRAME                                                                        #    11/29
RETURN                                                                          #    12/29
LABEL $$scope                                                                   #    14/29
DEFVAR GF@&pomInteger                                                           #    15/29
MOVE GF@&pomInteger int@0                                                       #    16/29
DEFVAR GF@&pomString                                                            #    17/29
MOVE GF@&pomString string@                                                      #    18/29
DEFVAR GF@&pomFloat                                                             #    19/29
MOVE GF@&pomFloat float@0                                                       #    20/29
DEFVAR GF@&pomBool                                                              #    21/29
MOVE GF@&pomBool bool@false                                                     #    22/29
DEFVAR GF@&pomCntr                                                              #    23/29
MOVE GF@&pomCntr int@0                                                          #    24/29
CREATEFRAME                                                                     #    25/29
DEFVAR TF@b                                                                     #    27/29
MOVE TF@b int@0                                                                 #    28/29
ERROR on line 9                                                                 #    29/29

