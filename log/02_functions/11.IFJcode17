# 2017-12-05 13:44:50.317772
# SECTION: 02_functions
# TEST: 11
# INFO: Function call function
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# 4.1-8: syntax error, unexpected ID, expecting END
# 
# EXPECTED INTERPRETER STDOUT:

#  84 84


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 51
# PRICE: ---
# GROOT: ---
# 
#   1: ' Function call function
#   2: 
#   3: function GHGKghgk55() as integer
#   4: 	return 42
#   5: end function
#   6: 
#   7: function GHGKghgk67() as integer
#   8: 	dim a as integer = 40
#   9: 	a = GHGKghgk55()
#  10: 	a = a + a
#  11: 	return a
#  12: end function
#  13: 
#  14: scope
#  15: 	dim b as integer = 20
#  16: 	b = GHGKghgk67()
#  17: 	print b;
#  18: 	b = GHGKghgk67()
#  19: 	print b;
#  20: end scope

########################################

.IFJcode17                                                                      #     1/52
JUMP $$scope                                                                    #     2/52
rule_par                                                                        #     4/52
LABEL $ghgkghgk55                                                               #     5/52
PUSHFRAME                                                                       #     6/52
DEFVAR LF@&retval                                                               #     7/52
MOVE LF@&retval GF@&pomInteger                                                  #     8/52
POPFRAME                                                                        #     9/52
RETURN                                                                          #    10/52
rule_par                                                                        #    12/52
LABEL $ghgkghgk67                                                               #    13/52
PUSHFRAME                                                                       #    14/52
DEFVAR LF@&retval                                                               #    15/52
DEFVAR LF@a                                                                     #    16/52
MOVE LF@a int@0                                                                 #    17/52
MOVE GF@&pomInteger int@40                                                      #    18/52
MOVE LF@a GF@&pomInteger                                                        #    19/52
CALL $ghgkghgk55                                                                #    20/52
MOVE LF@a LF@&retval                                                            #    21/52
MOVE GF@&pomInteger LF@a                                                        #    22/52
ADD GF@&pomInteger LF@a LF@a                                                    #    23/52
MOVE LF@a GF@&pomInteger                                                        #    24/52
MOVE GF@&pomInteger LF@a                                                        #    25/52
MOVE LF@&retval GF@&pomInteger                                                  #    26/52
POPFRAME                                                                        #    27/52
RETURN                                                                          #    28/52
LABEL $$scope                                                                   #    30/52
DEFVAR GF@&pomInteger                                                           #    31/52
MOVE GF@&pomInteger int@0                                                       #    32/52
DEFVAR GF@&pomString                                                            #    33/52
MOVE GF@&pomString string@                                                      #    34/52
DEFVAR GF@&pomFloat                                                             #    35/52
MOVE GF@&pomFloat float@0                                                       #    36/52
DEFVAR GF@&pomBool                                                              #    37/52
MOVE GF@&pomBool bool@false                                                     #    38/52
DEFVAR GF@&pomCntr                                                              #    39/52
MOVE GF@&pomCntr int@0                                                          #    40/52
CREATEFRAME                                                                     #    41/52
DEFVAR TF@b                                                                     #    43/52
MOVE TF@b int@0                                                                 #    44/52
MOVE GF@&pomInteger int@20                                                      #    45/52
MOVE TF@b GF@&pomInteger                                                        #    46/52
CALL $ghgkghgk67                                                                #    47/52
MOVE TF@b TF@&retval                                                            #    48/52
WRITE TF@b                                                                      #    49/52
CALL $ghgkghgk67                                                                #    50/52
MOVE TF@b TF@&retval                                                            #    51/52
WRITE TF@b                                                                      #    52/52

