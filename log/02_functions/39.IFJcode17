# 2017-12-03 20:43:47.058286
# SECTION: 02_functions
# TEST: 39
# INFO: hanoi towers recursion
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# ERROR -  4 - sÃ©mantickÃ¡ chyba typovÃ© kompatibility v aritmetickÃ½ch, rÌeteÌzcovÃ½ch a relacÌnÃ­ch vÃ½razech, prÌÃ­p. Å¡patnÃ½ pocÌet cÌi typ parametruÌ u volÃ¡nÃ­ funkce.
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:

# Move disk 1 from row A to rod C
# Move disk 2 from row A to rod B
# Move disk 1 from row C to rod B
# Move disk 3 from row A to rod C
# Move disk 1 from row B to rod A
# Move disk 2 from row B to rod C
# Move disk 1 from row A to rod C
# Move disk 4 from row A to rod B
# Move disk 1 from row C to rod B
# Move disk 2 from row C to rod A
# Move disk 1 from row B to rod A
# Move disk 3 from row C to rod B
# Move disk 1 from row A to rod C
# Move disk 2 from row A to rod B
# Move disk 1 from row C to rod B


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 4
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: ' hanoi towers recursion
#   2: 
#   3: declare function hanoi(________________ as integer, from as string, too as string, middle as string) as integer
#   4: 
#   5: function hanoi(n as integer, from as string, too as string, middle as string) as integer
#   6:     dim c as integer
#   7:     dim promena as integer = n - 1
#   8:     if n = 1 then
#   9:         print !"Move disk 1 from row "; from; !" to rod "; too; !"\n";
#  10:         return 0
#  11:     else
#  12:     end if
#  13:     c = hanoi(promena, from, middle, too)
#  14:     print !"Move disk"; n; !" from row "; from; !" to rod "; too; !"\n";
#  15:     c = hanoi(promena, middle, too, from)
#  16: end function
#  17: 
#  18: scope
#  19: 	dim ______dkhfskldfhsdfsfhjghs as integer
#  20:     ______dkhfskldfhsdfsfhjghs = hanoi(4, !"A", !"B", !"C")
#  21: end scope

########################################

token: 57 ...                                                                   #     1/42
token: 57 ...                                                                   #     2/42
token: 2 ... declare                                                            #     3/42
.IFJcode17                                                                      #     4/42
JUMP $$scope                                                                    #     5/42
token: 9 ... function                                                           #     7/42
token: 35 ... hanoi                                                             #     8/42
token: 50 ... (                                                                 #     9/42
token: 35 ... ________________                                                  #    10/42
rule_par                                                                        #    11/42
token: 0 ... as                                                                 #    12/42
token: 12 ... integer                                                           #    13/42
token: 48 ... ,                                                                 #    14/42
rule next par                                                                   #    15/42
token: 35 ... from                                                              #    16/42
rule_par                                                                        #    17/42
token: 0 ... as                                                                 #    18/42
token: 18 ... string                                                            #    19/42
token: 48 ... ,                                                                 #    20/42
rule next par                                                                   #    21/42
token: 35 ... too                                                               #    22/42
rule_par                                                                        #    23/42
token: 0 ... as                                                                 #    24/42
token: 18 ... string                                                            #    25/42
token: 48 ... ,                                                                 #    26/42
rule next par                                                                   #    27/42
token: 35 ... middle                                                            #    28/42
rule_par                                                                        #    29/42
token: 0 ... as                                                                 #    30/42
token: 18 ... string                                                            #    31/42
token: 51 ... )                                                                 #    32/42
rule next par                                                                   #    33/42
token: 0 ... as                                                                 #    34/42
token: 12 ... integer                                                           #    35/42
token: 57 ...                                                                   #    36/42
token: 57 ...                                                                   #    37/42
token: 9 ... function                                                           #    38/42
token: 35 ... hanoi                                                             #    39/42
token: 50 ... (                                                                 #    40/42
token: 35 ... n                                                                 #    41/42
ERROR on line 5                                                                 #    42/42

