# 2017-12-04 12:08:01.276533
# SECTION: 06_loops
# TEST: 22
# INFO: cyclus with constant propagation & input & if
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# 21.1-7: syntax error, unexpected ID, expecting END
# 
# EXPECTED INTERPRETER STDOUT:

# ?  70 50 30 31 11


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 10
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 51
# PRICE: ---
# GROOT: ---
# 
#   1: ' cyclus with constant propagation & input & if
#   2: 
#   3: scope
#   4: 
#   5:     dim a as integer
#   6: 
#   7:     input a
#   8: 
#   9:     a = a + 10
#  10: 
#  11:     dim b as integer
#  12:     b = a + 20
#  13: 
#  14:     dim c as integer
#  15: 
#  16:     c = a + 10 + b
#  17: 
#  18:     do while c > 0
#  19: 
#  20:         if c = 10 then
#  21:             c = 31
#  22:         else
#  23:         end if
#  24: 
#  25:         print c;
#  26:         c = c - a
#  27:     loop
#  28: 
#  29: end scope

########################################

.IFJcode17                                                                      #     1/58
JUMP $$scope                                                                    #     2/58
LABEL $$scope                                                                   #     4/58
DEFVAR GF@&pomInteger                                                           #     5/58
MOVE GF@&pomInteger int@0                                                       #     6/58
DEFVAR GF@&pomString                                                            #     7/58
MOVE GF@&pomString string@                                                      #     8/58
DEFVAR GF@&pomFloat                                                             #     9/58
MOVE GF@&pomFloat float@0                                                       #    10/58
DEFVAR GF@&pomBool                                                              #    11/58
MOVE GF@&pomBool bool@false                                                     #    12/58
DEFVAR GF@&pomCntr                                                              #    13/58
MOVE GF@&pomCntr int@0                                                          #    14/58
CREATEFRAME                                                                     #    15/58
DEFVAR TF@a                                                                     #    17/58
MOVE TF@a int@0                                                                 #    18/58
READ TF@a int                                                                   #    19/58
MOVE GF@&pomInteger TF@a                                                        #    20/58
redukce                                                                         #    21/58
ADD GF@&pomInteger TF@a int@10                                                  #    22/58
MOVE TF@a GF@&pomInteger                                                        #    23/58
DEFVAR TF@b                                                                     #    24/58
MOVE TF@b int@0                                                                 #    25/58
MOVE GF@&pomInteger TF@a                                                        #    26/58
redukce                                                                         #    27/58
ADD GF@&pomInteger TF@a int@20                                                  #    28/58
MOVE TF@b GF@&pomInteger                                                        #    29/58
DEFVAR TF@c                                                                     #    30/58
MOVE TF@c int@0                                                                 #    31/58
MOVE GF@&pomInteger TF@a                                                        #    32/58
redukce                                                                         #    33/58
ADD GF@&pomInteger TF@a int@10                                                  #    34/58
redukce                                                                         #    35/58
ADD GF@&pomInteger GF@&pomInteger TF@b                                          #    36/58
MOVE TF@c GF@&pomInteger                                                        #    37/58
LABEL $$loop_1                                                                  #    38/58
MOVE GF@&pomInteger TF@c                                                        #    39/58
redukce                                                                         #    40/58
GT GF@&pomBool TF@c int@0                                                       #    41/58
JUMPIFNEQ $$loop_end_1 GF@&pomBool bool@true                                    #    42/58
MOVE GF@&pomInteger TF@c                                                        #    43/58
redukce                                                                         #    44/58
EQ GF@&pomBool TF@c int@10                                                      #    45/58
JUMPIFNEQ $$else_1 GF@&pomBool bool@true                                        #    46/58
MOVE GF@&pomInteger int@31                                                      #    47/58
MOVE TF@c GF@&pomInteger                                                        #    48/58
JUMP $$endif_1                                                                  #    49/58
LABEL $$else_1                                                                  #    50/58
LABEL $$endif_1                                                                 #    51/58
WRITE TF@c                                                                      #    52/58
MOVE GF@&pomInteger TF@c                                                        #    53/58
redukce                                                                         #    54/58
SUB GF@&pomInteger TF@c TF@a                                                    #    55/58
MOVE TF@c GF@&pomInteger                                                        #    56/58
JUMP $$loop_1                                                                   #    57/58
LABEL $$loop_end_1                                                              #    58/58

