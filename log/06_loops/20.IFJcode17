# 2017-12-04 12:08:01.268424
# SECTION: 06_loops
# TEST: 20
# INFO: cyclus with constant propagation
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# 22.1-7: syntax error, unexpected ID, expecting END
# 
# EXPECTED INTERPRETER STDOUT:

#  70 50 30 10


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 51
# PRICE: ---
# GROOT: ---
# 
#   1: ' cyclus with constant propagation
#   2: 
#   3: scope
#   4: 
#   5:     dim a as integer
#   6: 
#   7:     a = 10
#   8: 
#   9:     a = a + 10
#  10: 
#  11:     dim b as integer
#  12:     b = a + 20
#  13: 
#  14:     dim c as integer
#  15: 
#  16:     c = a + 10 + b
#  17: 
#  18:     do while c > 0
#  19: 
#  20:         print c;
#  21:         c = c - a
#  22:     loop
#  23: 
#  24: end scope

########################################

.IFJcode17                                                                      #     1/50
JUMP $$scope                                                                    #     2/50
LABEL $$scope                                                                   #     4/50
DEFVAR GF@&pomInteger                                                           #     5/50
MOVE GF@&pomInteger int@0                                                       #     6/50
DEFVAR GF@&pomString                                                            #     7/50
MOVE GF@&pomString string@                                                      #     8/50
DEFVAR GF@&pomFloat                                                             #     9/50
MOVE GF@&pomFloat float@0                                                       #    10/50
DEFVAR GF@&pomBool                                                              #    11/50
MOVE GF@&pomBool bool@false                                                     #    12/50
DEFVAR GF@&pomCntr                                                              #    13/50
MOVE GF@&pomCntr int@0                                                          #    14/50
CREATEFRAME                                                                     #    15/50
DEFVAR TF@a                                                                     #    17/50
MOVE TF@a int@0                                                                 #    18/50
MOVE GF@&pomInteger int@10                                                      #    19/50
MOVE TF@a GF@&pomInteger                                                        #    20/50
MOVE GF@&pomInteger TF@a                                                        #    21/50
redukce                                                                         #    22/50
ADD GF@&pomInteger TF@a int@10                                                  #    23/50
MOVE TF@a GF@&pomInteger                                                        #    24/50
DEFVAR TF@b                                                                     #    25/50
MOVE TF@b int@0                                                                 #    26/50
MOVE GF@&pomInteger TF@a                                                        #    27/50
redukce                                                                         #    28/50
ADD GF@&pomInteger TF@a int@20                                                  #    29/50
MOVE TF@b GF@&pomInteger                                                        #    30/50
DEFVAR TF@c                                                                     #    31/50
MOVE TF@c int@0                                                                 #    32/50
MOVE GF@&pomInteger TF@a                                                        #    33/50
redukce                                                                         #    34/50
ADD GF@&pomInteger TF@a int@10                                                  #    35/50
redukce                                                                         #    36/50
ADD GF@&pomInteger GF@&pomInteger TF@b                                          #    37/50
MOVE TF@c GF@&pomInteger                                                        #    38/50
LABEL $$loop_1                                                                  #    39/50
MOVE GF@&pomInteger TF@c                                                        #    40/50
redukce                                                                         #    41/50
GT GF@&pomBool TF@c int@0                                                       #    42/50
JUMPIFNEQ $$loop_end_1 GF@&pomBool bool@true                                    #    43/50
WRITE TF@c                                                                      #    44/50
MOVE GF@&pomInteger TF@c                                                        #    45/50
redukce                                                                         #    46/50
SUB GF@&pomInteger TF@c TF@a                                                    #    47/50
MOVE TF@c GF@&pomInteger                                                        #    48/50
JUMP $$loop_1                                                                   #    49/50
LABEL $$loop_end_1                                                              #    50/50

