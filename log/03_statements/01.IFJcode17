# 2017-12-04 12:08:01.081252
# SECTION: 03_statements
# TEST: 01
# INFO: basic constant assigment
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 4 with following arguments:
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@&pomInteger
# Executing instruction: IMOVE at line: 6 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@&pomInteger()
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@&pomString
# Executing instruction: IMOVE at line: 8 with following arguments:
# Arg1: Const@=(string)
# Dest: GF@&pomString()
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@&pomFloat
# Executing instruction: IMOVE at line: 10 with following arguments:
# Arg1: Const@=0(double)
# Dest: GF@&pomFloat()
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: GF@&pomBool
# Executing instruction: IMOVE at line: 12 with following arguments:
# Arg1: Const@=false(bool)
# Dest: GF@&pomBool()
# Executing instruction: IDEFVAR at line: 13 with following arguments:
# Dest: GF@&pomCntr
# Executing instruction: IMOVE at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@&pomCntr()
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: TF@a
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=(string)
# Dest: TF@a()
# Executing instruction: IMOVE at line: 19 with following arguments:
# Arg1: Const@=fooman(string)
# Dest: GF@&pomString=(string)
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: GF@&pomString=fooman(string)
# Dest: TF@a=(string)
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: TF@b
# Executing instruction: IMOVE at line: 22 with following arguments:
# Arg1: Const@=0(int)
# Dest: TF@b()
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=42(int)
# Dest: GF@&pomInteger=0(int)
# Executing instruction: IMOVE at line: 24 with following arguments:
# Arg1: GF@&pomInteger=42(int)
# Dest: TF@b=0(int)
# Executing instruction: IDEFVAR at line: 25 with following arguments:
# Dest: TF@c
# Executing instruction: IMOVE at line: 26 with following arguments:
# Arg1: Const@=0(double)
# Dest: TF@c()
# Executing instruction: IMOVE at line: 27 with following arguments:
# Arg1: Const@=74.84999999999999(double)
# Dest: GF@&pomFloat=0(double)
# Executing instruction: IMOVE at line: 28 with following arguments:
# Arg1: GF@&pomFloat=74.84999999999999(double)
# Dest: TF@c=0(double)
# Executing instruction: IWRITE at line: 29 with following arguments:
# Arg1: TF@a=fooman(string)
# Executing instruction: IWRITE at line: 30 with following arguments:
# Arg1: TF@b=42(int)
# Executing instruction: IWRITE at line: 31 with following arguments:
# Arg1: TF@c=74.84999999999999(double)
# Executing instruction: IGROOT at line: 33 with following arguments:
# I am Groot at 33 (161).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 161 (38+123)
# GROOT: 161
# 
#   1: ' basic constant assigment
#   2: scope
#   3: 	dim a as string
#   4: 	a =    !"fooman"
#   5: 
#   6: 	dim b as integer
#   7: 	b =  42
#   8: 
#   9: 	dim c as double
#  10: 	c  =  74.85
#  11: 
#  12: 	print a; b; c;
#  13: end scope

########################################

.IFJcode17                                                                      #     1/31
JUMP $$scope                                                                    #     2/31
LABEL $$scope                                                                   #     4/31
DEFVAR GF@&pomInteger                                                           #     5/31
MOVE GF@&pomInteger int@0                                                       #     6/31
DEFVAR GF@&pomString                                                            #     7/31
MOVE GF@&pomString string@                                                      #     8/31
DEFVAR GF@&pomFloat                                                             #     9/31
MOVE GF@&pomFloat float@0                                                       #    10/31
DEFVAR GF@&pomBool                                                              #    11/31
MOVE GF@&pomBool bool@false                                                     #    12/31
DEFVAR GF@&pomCntr                                                              #    13/31
MOVE GF@&pomCntr int@0                                                          #    14/31
CREATEFRAME                                                                     #    15/31
DEFVAR TF@a                                                                     #    17/31
MOVE TF@a string@                                                               #    18/31
MOVE GF@&pomString string@fooman                                                #    19/31
MOVE TF@a GF@&pomString                                                         #    20/31
DEFVAR TF@b                                                                     #    21/31
MOVE TF@b int@0                                                                 #    22/31
MOVE GF@&pomInteger int@42                                                      #    23/31
MOVE TF@b GF@&pomInteger                                                        #    24/31
DEFVAR TF@c                                                                     #    25/31
MOVE TF@c float@0                                                               #    26/31
MOVE GF@&pomFloat float@74.85                                                   #    27/31
MOVE TF@c GF@&pomFloat                                                          #    28/31
WRITE TF@a                                                                      #    29/31
WRITE TF@b                                                                      #    30/31
WRITE TF@c                                                                      #    31/31

