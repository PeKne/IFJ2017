# 2017-12-05 13:44:51.611312
# SECTION: 96_programs
# TEST: 03
# INFO: Swap
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: SUCCESS
# 
# COMPILER STDERR:
# 
# INTERPRETER STDERR:
# Executing instruction: IJUMP at line: 2 with following arguments:
# Executing instruction: ILABEL at line: 4 with following arguments:
# Executing instruction: IDEFVAR at line: 5 with following arguments:
# Dest: GF@&pomInteger
# Executing instruction: IMOVE at line: 6 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@&pomInteger()
# Executing instruction: IDEFVAR at line: 7 with following arguments:
# Dest: GF@&pomString
# Executing instruction: IMOVE at line: 8 with following arguments:
# Arg1: Const@=(string)
# Dest: GF@&pomString()
# Executing instruction: IDEFVAR at line: 9 with following arguments:
# Dest: GF@&pomFloat
# Executing instruction: IMOVE at line: 10 with following arguments:
# Arg1: Const@=0(double)
# Dest: GF@&pomFloat()
# Executing instruction: IDEFVAR at line: 11 with following arguments:
# Dest: GF@&pomBool
# Executing instruction: IMOVE at line: 12 with following arguments:
# Arg1: Const@=false(bool)
# Dest: GF@&pomBool()
# Executing instruction: IDEFVAR at line: 13 with following arguments:
# Dest: GF@&pomCntr
# Executing instruction: IMOVE at line: 14 with following arguments:
# Arg1: Const@=0(int)
# Dest: GF@&pomCntr()
# Executing instruction: ICREATEFRAME at line: 15 with following arguments:
# Executing instruction: IDEFVAR at line: 17 with following arguments:
# Dest: TF@a
# Executing instruction: IMOVE at line: 18 with following arguments:
# Arg1: Const@=0(int)
# Dest: TF@a()
# Executing instruction: IMOVE at line: 19 with following arguments:
# Arg1: Const@=10(int)
# Dest: GF@&pomInteger=0(int)
# Executing instruction: IMOVE at line: 20 with following arguments:
# Arg1: GF@&pomInteger=10(int)
# Dest: TF@a=0(int)
# Executing instruction: IDEFVAR at line: 21 with following arguments:
# Dest: TF@b
# Executing instruction: IMOVE at line: 22 with following arguments:
# Arg1: Const@=0(int)
# Dest: TF@b()
# Executing instruction: IMOVE at line: 23 with following arguments:
# Arg1: Const@=30(int)
# Dest: GF@&pomInteger=10(int)
# Executing instruction: IMOVE at line: 24 with following arguments:
# Arg1: GF@&pomInteger=30(int)
# Dest: TF@b=0(int)
# Executing instruction: IDEFVAR at line: 25 with following arguments:
# Dest: TF@pomocna
# Executing instruction: IMOVE at line: 26 with following arguments:
# Arg1: Const@=0(int)
# Dest: TF@pomocna()
# Executing instruction: IMOVE at line: 27 with following arguments:
# Arg1: TF@b=30(int)
# Dest: GF@&pomInteger=30(int)
# Executing instruction: IMOVE at line: 28 with following arguments:
# Arg1: GF@&pomInteger=30(int)
# Dest: TF@pomocna=0(int)
# Executing instruction: IMOVE at line: 29 with following arguments:
# Arg1: TF@a=10(int)
# Dest: GF@&pomInteger=30(int)
# Executing instruction: IMOVE at line: 30 with following arguments:
# Arg1: GF@&pomInteger=10(int)
# Dest: TF@b=30(int)
# Executing instruction: IMOVE at line: 31 with following arguments:
# Arg1: TF@pomocna=30(int)
# Dest: GF@&pomInteger=10(int)
# Executing instruction: IMOVE at line: 32 with following arguments:
# Arg1: GF@&pomInteger=30(int)
# Dest: TF@a=10(int)
# Executing instruction: IWRITE at line: 33 with following arguments:
# Arg1: TF@a=30(int)
# Executing instruction: IWRITE at line: 34 with following arguments:
# Arg1: TF@b=10(int)
# Executing instruction: IGROOT at line: 36 with following arguments:
# I am Groot at 36 (192).
# 
# STDOUT DIFF:
# 

# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 0
# PRICE: 192 (38+154)
# GROOT: 192
# 
#   1: 'Swap
#   2: scope 
#   3: 
#   4: dim a as integer = 10
#   5: dim b as integer = 30
#   6: 
#   7: dim pomocna as integer = b
#   8: b = a
#   9: a = pomocna
#  10: 
#  11: print a; b;
#  12: 
#  13: end scope

########################################

.IFJcode17                                                                      #     1/34
JUMP $$scope                                                                    #     2/34
LABEL $$scope                                                                   #     4/34
DEFVAR GF@&pomInteger                                                           #     5/34
MOVE GF@&pomInteger int@0                                                       #     6/34
DEFVAR GF@&pomString                                                            #     7/34
MOVE GF@&pomString string@                                                      #     8/34
DEFVAR GF@&pomFloat                                                             #     9/34
MOVE GF@&pomFloat float@0                                                       #    10/34
DEFVAR GF@&pomBool                                                              #    11/34
MOVE GF@&pomBool bool@false                                                     #    12/34
DEFVAR GF@&pomCntr                                                              #    13/34
MOVE GF@&pomCntr int@0                                                          #    14/34
CREATEFRAME                                                                     #    15/34
DEFVAR TF@a                                                                     #    17/34
MOVE TF@a int@0                                                                 #    18/34
MOVE GF@&pomInteger int@10                                                      #    19/34
MOVE TF@a GF@&pomInteger                                                        #    20/34
DEFVAR TF@b                                                                     #    21/34
MOVE TF@b int@0                                                                 #    22/34
MOVE GF@&pomInteger int@30                                                      #    23/34
MOVE TF@b GF@&pomInteger                                                        #    24/34
DEFVAR TF@pomocna                                                               #    25/34
MOVE TF@pomocna int@0                                                           #    26/34
MOVE GF@&pomInteger TF@b                                                        #    27/34
MOVE TF@pomocna GF@&pomInteger                                                  #    28/34
MOVE GF@&pomInteger TF@a                                                        #    29/34
MOVE TF@b GF@&pomInteger                                                        #    30/34
MOVE GF@&pomInteger TF@pomocna                                                  #    31/34
MOVE TF@a GF@&pomInteger                                                        #    32/34
WRITE TF@a                                                                      #    33/34
WRITE TF@b                                                                      #    34/34

