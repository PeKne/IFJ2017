# 2017-12-04 12:08:01.841917
# SECTION: 96_programs
# TEST: 12
# INFO: Leap year
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# ERROR - 2 - chyba v programu v rÃ¡mci syntaktickÃ© analÃ½zy (chybnÃ¡ syntaxe programu).
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:

# Enter a year: ?  2016 is a leap year


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 2016
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 2
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: ' Leap year
#   2: 
#   3: declare function modulo(divident as integer, divider as integer) as integer
#   4: 
#   5: function get_year() as integer
#   6:     print !"Enter a year: ";
#   7:     dim year as integer
#   8:     input year
#   9:     return year
#  10: end function
#  11: 
#  12: function modulo(divident as integer, divider as integer) as integer
#  13:     dim res as integer
#  14:     res = divident - (divident \ divider) * divider
#  15:     return res
#  16: end function
#  17: 
#  18: scope
#  19:     dim year as integer
#  20:     year = get_year()
#  21:     dim res as integer
#  22:     res = modulo(year, 4)
#  23:     if(res = 0) then
#  24:         res = modulo(year, 100)
#  25:         if(res = 0) then
#  26:             ' year is divisible by 400, hence the year is a leap year
#  27:             res = modulo(year, 400)
#  28:             if (res = 0) then
#  29:                 print year; !" is a leap year";
#  30:             else
#  31:                 print year; !" is not a leap year";
#  32:             end if
#  33:         else
#  34:             print year; !" is a leap year";
#  35:         end if
#  36:     
#  37:     else
#  38:          print year; !" is not a leap year";
#  39:     end if
#  40: end scope

########################################

.IFJcode17                                                                      #     1/66
JUMP $$scope                                                                    #     2/66
rule_par                                                                        #     4/66
rule next par                                                                   #     5/66
rule_par                                                                        #     6/66
rule next par                                                                   #     7/66
rule_par                                                                        #     8/66
LABEL $get_year                                                                 #     9/66
PUSHFRAME                                                                       #    10/66
DEFVAR LF@&retval                                                               #    11/66
WRITE string@Enter\032a\032year:\032                                            #    12/66
DEFVAR LF@year                                                                  #    13/66
MOVE LF@year int@0                                                              #    14/66
READ LF@year int                                                                #    15/66
MOVE GF@&pomInteger LF@year                                                     #    16/66
MOVE LF@&retval GF@&pomInteger                                                  #    17/66
POPFRAME                                                                        #    18/66
RETURN                                                                          #    19/66
LABEL $modulo                                                                   #    21/66
PUSHFRAME                                                                       #    22/66
DEFVAR LF@&retval                                                               #    23/66
DEFVAR LF@res                                                                   #    24/66
MOVE LF@res int@0                                                               #    25/66
MOVE GF@&pomInteger LF@divident                                                 #    26/66
redukce                                                                         #    27/66
MOVE GF@&pomCntr int@0                                                          #    29/66
LABEL $$WholeDiv_Begin0                                                         #    30/66
ADD GF@&pomCntr GF@&pomCntr int@1                                               #    31/66
SUB GF@&pomInteger GF@&pomInteger LF@divider                                    #    32/66
LT GF@&pomBool GF@&pomInteger int@0                                             #    33/66
JUMPIFNEQ $$WholeDiv_Begin0 GF@&pomBool bool@true                               #    34/66
SUB GF@&pomCntr GF@&pomCntr int@1                                               #    35/66
MOVE GF@&pomInteger GF@&pomCntr                                                 #    36/66
redukce                                                                         #    37/66
MUL GF@&pomInteger GF@&pomInteger LF@divider                                    #    38/66
redukce                                                                         #    39/66
SUB GF@&pomInteger LF@divident GF@&pomInteger                                   #    40/66
MOVE LF@res GF@&pomInteger                                                      #    41/66
MOVE GF@&pomInteger LF@res                                                      #    42/66
MOVE LF@&retval GF@&pomInteger                                                  #    43/66
POPFRAME                                                                        #    44/66
RETURN                                                                          #    45/66
LABEL $$scope                                                                   #    47/66
DEFVAR GF@&pomInteger                                                           #    48/66
MOVE GF@&pomInteger int@0                                                       #    49/66
DEFVAR GF@&pomString                                                            #    50/66
MOVE GF@&pomString string@                                                      #    51/66
DEFVAR GF@&pomFloat                                                             #    52/66
MOVE GF@&pomFloat float@0                                                       #    53/66
DEFVAR GF@&pomBool                                                              #    54/66
MOVE GF@&pomBool bool@false                                                     #    55/66
DEFVAR GF@&pomCntr                                                              #    56/66
MOVE GF@&pomCntr int@0                                                          #    57/66
CREATEFRAME                                                                     #    58/66
DEFVAR TF@year                                                                  #    60/66
MOVE TF@year int@0                                                              #    61/66
CALL $get_year                                                                  #    62/66
MOVE TF@year TF@&retval                                                         #    63/66
DEFVAR TF@res                                                                   #    64/66
MOVE TF@res int@0                                                               #    65/66
ERROR on line 22                                                                #    66/66

