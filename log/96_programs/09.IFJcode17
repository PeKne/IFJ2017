# 2017-12-04 16:26:33.503948
# SECTION: 96_programs
# TEST: 09
# INFO: Count modulo
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# ERROR - 2 - chyba v programu v rÃ¡mci syntaktickÃ© analÃ½zy (chybnÃ¡ syntaxe programu).
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:

#  2


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 2
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: ' Count modulo
#   2: function modulo(delitel as integer, delenec as integer) as integer
#   3:     dim vysledek as integer
#   4:     vysledek = delitel - (delitel\delenec)*delenec
#   5:     return vysledek
#   6: end function
#   7: 
#   8: scope
#   9: 	dim a as integer
#  10: 	a = modulo (10, 4)
#  11: 	print a;
#  12: end scope

########################################

.IFJcode17                                                                      #     1/46
JUMP $$scope                                                                    #     2/46
rule_par                                                                        #     4/46
rule next par                                                                   #     5/46
rule_par                                                                        #     6/46
rule next par                                                                   #     7/46
LABEL $modulo                                                                   #     8/46
PUSHFRAME                                                                       #     9/46
DEFVAR LF@&retval                                                               #    10/46
DEFVAR LF@vysledek                                                              #    11/46
MOVE LF@vysledek int@0                                                          #    12/46
MOVE GF@&pomInteger LF@delitel                                                  #    13/46
MOVE GF@&pomCntr int@0                                                          #    15/46
LABEL $$WholeDiv_Begin0                                                         #    16/46
ADD GF@&pomCntr GF@&pomCntr int@1                                               #    17/46
SUB GF@&pomInteger GF@&pomInteger LF@delenec                                    #    18/46
LT GF@&pomBool GF@&pomInteger int@0                                             #    19/46
JUMPIFNEQ $$WholeDiv_Begin0 GF@&pomBool bool@true                               #    20/46
SUB GF@&pomCntr GF@&pomCntr int@1                                               #    21/46
MOVE GF@&pomInteger GF@&pomCntr                                                 #    22/46
MUL GF@&pomInteger GF@&pomInteger LF@delenec                                    #    23/46
SUB GF@&pomInteger LF@delitel GF@&pomInteger                                    #    24/46
MOVE LF@vysledek GF@&pomInteger                                                 #    25/46
MOVE GF@&pomInteger LF@vysledek                                                 #    26/46
MOVE LF@&retval GF@&pomInteger                                                  #    27/46
POPFRAME                                                                        #    28/46
RETURN                                                                          #    29/46
LABEL $$scope                                                                   #    31/46
DEFVAR GF@&pomInteger                                                           #    32/46
MOVE GF@&pomInteger int@0                                                       #    33/46
DEFVAR GF@&pomString                                                            #    34/46
MOVE GF@&pomString string@                                                      #    35/46
DEFVAR GF@&pomFloat                                                             #    36/46
MOVE GF@&pomFloat float@0                                                       #    37/46
DEFVAR GF@&pomBool                                                              #    38/46
MOVE GF@&pomBool bool@false                                                     #    39/46
DEFVAR GF@&pomCntr                                                              #    40/46
MOVE GF@&pomCntr int@0                                                          #    41/46
CREATEFRAME                                                                     #    42/46
DEFVAR TF@a                                                                     #    44/46
MOVE TF@a int@0                                                                 #    45/46
ERROR on line 10                                                                #    46/46

