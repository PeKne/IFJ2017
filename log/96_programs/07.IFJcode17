# 2017-12-04 12:08:01.838368
# SECTION: 96_programs
# TEST: 07
# INFO: Draw a pyramide
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# Chyba v code_gen_expres TF@GF@&pomString TF@i TF@rows
# Chyba v code_gen_expres TF@GF@&pomString TF@j TF@i
# 
# INTERPRETER STDERR:
# 32.1-7: syntax error, unexpected ID, expecting END
# 
# EXPECTED INTERPRETER STDOUT:

# Enter number of rows
# ? 
#  1
#  1 2
#  1 2 3
#  1 2 3 4
#  1 2 3 4 5
#  1 2 3 4 5 6
#  1 2 3 4 5 6 7
#  1 2 3 4 5 6 7 8
#  1 2 3 4 5 6 7 8 9
#  1 2 3 4 5 6 7 8 9 10


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 10
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 0
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: 51
# PRICE: ---
# GROOT: ---
# 
#   1: ' Draw a pyramide
#   2: scope 
#   3:     print !"Enter number of rows\n";
#   4:     dim rows as integer
#   5:     input rows
#   6:     
#   7:     print !"\n";
#   8:     
#   9:     dim i as integer = 1
#  10:     dim j as integer = 1
#  11:     
#  12:     do while i <= rows
#  13:         j = 1
#  14:         do while j <= i
#  15:         
#  16:         
#  17:             print j;
#  18:             j = j + 1
#  19:         loop
#  20:         print !"\n";
#  21:         i = i + 1
#  22:     loop
#  23:     
#  24: end scope
#  25:     

########################################

.IFJcode17                                                                      #     1/53
JUMP $$scope                                                                    #     2/53
LABEL $$scope                                                                   #     4/53
DEFVAR GF@&pomInteger                                                           #     5/53
MOVE GF@&pomInteger int@0                                                       #     6/53
DEFVAR GF@&pomString                                                            #     7/53
MOVE GF@&pomString string@                                                      #     8/53
DEFVAR GF@&pomFloat                                                             #     9/53
MOVE GF@&pomFloat float@0                                                       #    10/53
DEFVAR GF@&pomBool                                                              #    11/53
MOVE GF@&pomBool bool@false                                                     #    12/53
DEFVAR GF@&pomCntr                                                              #    13/53
MOVE GF@&pomCntr int@0                                                          #    14/53
CREATEFRAME                                                                     #    15/53
WRITE string@Enter\032number\032of\032rows\010                                  #    17/53
DEFVAR TF@rows                                                                  #    18/53
MOVE TF@rows int@0                                                              #    19/53
READ TF@rows int                                                                #    20/53
WRITE string@\010                                                               #    21/53
DEFVAR TF@i                                                                     #    22/53
MOVE TF@i int@0                                                                 #    23/53
MOVE GF@&pomInteger int@1                                                       #    24/53
MOVE TF@i GF@&pomInteger                                                        #    25/53
DEFVAR TF@j                                                                     #    26/53
MOVE TF@j int@0                                                                 #    27/53
MOVE GF@&pomInteger int@1                                                       #    28/53
MOVE TF@j GF@&pomInteger                                                        #    29/53
LABEL $$loop_1                                                                  #    30/53
MOVE GF@&pomInteger TF@i                                                        #    31/53
redukce                                                                         #    32/53
JUMPIFNEQ $$loop_end_1 GF@&pomBool bool@true                                    #    33/53
MOVE GF@&pomInteger int@1                                                       #    34/53
MOVE TF@j GF@&pomInteger                                                        #    35/53
LABEL $$loop_1                                                                  #    36/53
MOVE GF@&pomInteger TF@j                                                        #    37/53
redukce                                                                         #    38/53
JUMPIFNEQ $$loop_end_1 GF@&pomBool bool@true                                    #    39/53
WRITE TF@j                                                                      #    40/53
MOVE GF@&pomInteger TF@j                                                        #    41/53
redukce                                                                         #    42/53
ADD GF@&pomInteger TF@j int@1                                                   #    43/53
MOVE TF@j GF@&pomInteger                                                        #    44/53
JUMP $$loop_1                                                                   #    45/53
LABEL $$loop_end_1                                                              #    46/53
WRITE string@\010                                                               #    47/53
MOVE GF@&pomInteger TF@i                                                        #    48/53
redukce                                                                         #    49/53
ADD GF@&pomInteger TF@i int@1                                                   #    50/53
MOVE TF@i GF@&pomInteger                                                        #    51/53
JUMP $$loop_2                                                                   #    52/53
LABEL $$loop_end_2                                                              #    53/53

