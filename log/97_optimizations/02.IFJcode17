# 2017-12-04 12:08:01.849153
# SECTION: 97_optimizations
# TEST: 02
# INFO: constant propagation into loop
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# In if and loop statement can only be relational operators.
# ERROR - 3 - sÃ©mantickÃ¡ chyba v programu â nedefinovanÃ¡ funkce/promeÌnnÃ¡, pokus o redefinici funkce/promeÌnnÃ©, atd.
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:

# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39
# -129.39


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 3
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: ' constant propagation into loop
#   2: 
#   3: scope
#   4: 	dim counter as integer = 50
#   5: 	dim constant as integer = 8 + 7
#   6: 
#   7: 	do while counter > 0
#   8: 		print (10.2 / 98 + (constant \ 3 * 6.85) - 14) / (constant - 5) + (constant + 9 - 8) * ((constant+17.21)\(10.8 - constant));
#   9: 		counter = counter - 1
#  10: 		print !"\n";
#  11: 	loop
#  12: 
#  13: end scope

########################################

.IFJcode17                                                                      #     1/35
JUMP $$scope                                                                    #     2/35
LABEL $$scope                                                                   #     4/35
DEFVAR GF@&pomInteger                                                           #     5/35
MOVE GF@&pomInteger int@0                                                       #     6/35
DEFVAR GF@&pomString                                                            #     7/35
MOVE GF@&pomString string@                                                      #     8/35
DEFVAR GF@&pomFloat                                                             #     9/35
MOVE GF@&pomFloat float@0                                                       #    10/35
DEFVAR GF@&pomBool                                                              #    11/35
MOVE GF@&pomBool bool@false                                                     #    12/35
DEFVAR GF@&pomCntr                                                              #    13/35
MOVE GF@&pomCntr int@0                                                          #    14/35
CREATEFRAME                                                                     #    15/35
DEFVAR TF@counter                                                               #    17/35
MOVE TF@counter int@0                                                           #    18/35
MOVE GF@&pomInteger int@50                                                      #    19/35
MOVE TF@counter GF@&pomInteger                                                  #    20/35
DEFVAR TF@constant                                                              #    21/35
MOVE TF@constant int@0                                                          #    22/35
MOVE GF@&pomInteger int@8                                                       #    23/35
redukce                                                                         #    24/35
ADD GF@&pomInteger int@8 int@7                                                  #    25/35
MOVE TF@constant GF@&pomInteger                                                 #    26/35
LABEL $$loop_1                                                                  #    27/35
MOVE GF@&pomInteger TF@counter                                                  #    28/35
redukce                                                                         #    29/35
GT GF@&pomBool TF@counter int@0                                                 #    30/35
JUMPIFNEQ $$loop_end_1 GF@&pomBool bool@true                                    #    31/35
WRITE TF@10.2                                                                   #    32/35
WRITE TF@98                                                                     #    33/35
redukce                                                                         #    34/35
ERROR on line 8                                                                 #    35/35

