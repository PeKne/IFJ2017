# 2017-12-05 13:44:51.645087
# SECTION: 97_optimizations
# TEST: 04
# INFO: constant propagation into loop II
# REQUIRED EXTENSIONS: 
# ACTIVATED EXTENSIONS: 
# STATE: FAIL
# 
# COMPILER STDERR:
# In if and loop statement can only be relational operators.
# ERROR -  6 - ostatnÃ­ sÃ©mantickÃ© chyby.
# 
# INTERPRETER STDERR:
# 
# EXPECTED INTERPRETER STDOUT:

# -0.216289
# -0.220295
# -0.224451
# -0.228768
# -0.233253
# -0.237918
# -0.242774
# -0.247832
# -0.253105
# -0.280346
# -0.286576
# -0.293089
# -0.299905
# -0.307046
# -0.314535
# -0.322398
# -0.330665
# -0.339366
# -0.348538
# -0.35822
# -0.368455
# -0.379292
# -0.390785
# -0.402997
# -0.415997
# -0.429864
# -0.444687
# -0.460569
# -0.477627
# -0.495997
# -0.555837
# -0.578997
# -0.60417
# -0.631633
# -0.66171
# -0.694796
# -0.731364
# -0.771995
# -0.817407
# -0.868495
# -0.926395
# -0.992566
# -1.06892
# -1.15799
# -1.26327
# -1.38959
# -1.54399
#  14.263
#  14.0149
#  29.684


# CURRENT INTERPRETER STDOUT:



# INTERPRETER STDIN: 
# 
#
# EXPECTED COMPILER EXIT CODE: 0
# CURRENT COMPILER EXIT CODE: 6
# EXPECTED INTERPRETER EXIT CODE: 0
# CURRENT INTERPRETER EXIT CODE: None
# PRICE: ---
# GROOT: ---
# 
#   1: ' constant propagation into loop II
#   2: 
#   3: scope
#   4: 	dim counter as integer = 50
#   5: 	dim constant as integer = 8 + 7
#   6: 
#   7: 	do while counter > 0
#   8: 		print (10.2 / 98 + (counter \ 3 * 6.85) - 14) / (counter + 5) + (constant + 9 - 8) * ((constant+17.21)\(10.8 * counter));
#   9: 		counter = counter - 1
#  10: 		print !"\n";
#  11: 	loop
#  12: 
#  13: end scope

########################################

.IFJcode17                                                                      #     1/32
JUMP $$scope                                                                    #     2/32
LABEL $$scope                                                                   #     4/32
DEFVAR GF@&pomInteger                                                           #     5/32
MOVE GF@&pomInteger int@0                                                       #     6/32
DEFVAR GF@&pomString                                                            #     7/32
MOVE GF@&pomString string@                                                      #     8/32
DEFVAR GF@&pomFloat                                                             #     9/32
MOVE GF@&pomFloat float@0                                                       #    10/32
DEFVAR GF@&pomBool                                                              #    11/32
MOVE GF@&pomBool bool@false                                                     #    12/32
DEFVAR GF@&pomCntr                                                              #    13/32
MOVE GF@&pomCntr int@0                                                          #    14/32
CREATEFRAME                                                                     #    15/32
DEFVAR TF@counter                                                               #    17/32
MOVE TF@counter int@0                                                           #    18/32
MOVE GF@&pomInteger int@50                                                      #    19/32
MOVE TF@counter GF@&pomInteger                                                  #    20/32
DEFVAR TF@constant                                                              #    21/32
MOVE TF@constant int@0                                                          #    22/32
MOVE GF@&pomInteger int@8                                                       #    23/32
ADD GF@&pomInteger int@8 int@7                                                  #    24/32
MOVE TF@constant GF@&pomInteger                                                 #    25/32
LABEL $$loop_1                                                                  #    26/32
MOVE GF@&pomInteger TF@counter                                                  #    27/32
GT GF@&pomBool TF@counter int@0                                                 #    28/32
JUMPIFNEQ $$loop_end_1 GF@&pomBool bool@true                                    #    29/32
WRITE float@10.2                                                                #    30/32
WRITE int@98                                                                    #    31/32
ERROR on line 8                                                                 #    32/32

